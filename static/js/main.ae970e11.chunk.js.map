{"version":3,"sources":["utils/common-functions.js","components/row.js","utils/setLanguage.js","components/table.js","components/level.js","constants.js","components/choropleth.js","components/mapexplorer.js","components/timeseries.js","components/Screens/home.js","components/Screens/Services.js","components/navbar.js","utils/localStorage.js","components/links.js","components/faq.js","components/Screens/Volunteers.js","App.js","serviceWorker.js","index.js"],"names":["months","formatDate","unformattedDate","day","slice","month","year","time","formatDateAbsolute","validateCTS","data","today","Date","setHours","dataTypes","filter","d","every","dt","date","Number","getFullYear","Row","props","useState","state","setState","districts","setDistricts","sortedDistricts","setSortedDistricts","sortColumn","localStorage","getItem","isAscending","sortData","setSortData","useEffect","sortDistricts","useCallback","aDistricts","sorted","Object","keys","sort","district1","district2","value1","parseInt","confirmed","value2","comparisonValue","forEach","key","handleSort","column","setItem","Fragment","className","total","onMouseEnter","onHighlightState","index","onMouseLeave","touchstart","onClick","handleReveal","style","background","fontWeight","color","deltaconfirmed","active","recovered","deltarecovered","deaths","deltadeaths","display","reveal","colSpan","title","isNaN","parse","lastupdatedtime","formatDistance","e","window","innerWidth","console","log","district","toLowerCase","map","onHighlightDistrict","delta","Unknown","language","selectedLanguage","languageLabels","JSON","Table","states","setStates","setMaharashtra","revealedStates","setRevealedStates","summary","onlyMaharashtra","statecode","Maharashtra","stateDistrictWiseData","currentsortColumn","currentTarget","querySelector","getAttribute","totalRow","splice","StateData1","StateData2","unshift","doSort","animationDelay","MAHARASHTRA","districtData","Level","MAP_TYPES","propertyFieldMap","country","ChoroplethMap","statistic","mapData","setHoveredRegion","mapMeta","changeMap","selectedRegion","choroplethMap","useRef","svgRenderCount","setSvgRenderCount","ready","geoData","d3","remove","propertyField","mapType","svg","current","width","attr","height","topology","topojson","objects","graphObjectName","projection","fitSize","fitExtent","path","onceTouchedRegion","append","selectAll","features","enter","n","properties","maxConfirmed","on","name","err","handleMouseover","target","parentNode","appendChild","text","value","parseFloat","toFixed","toString","toTitleCase","str","split","i","length","charAt","toUpperCase","join","renderData","cells","label","domain","genLength","generatedLabels","labelDelimiter","Math","floor","n1","n2","Array","from","legendLinear","legendColor","shapeWidth","shapeHeight","titleWidth","labels","orient","scale","select","call","a","geoDataFile","prevCount","classed","nodes","id","viewBox","preserveAspectRatio","ref","regionHighlighted","setSelectedRegion","currentHoveredRegion","setCurrentHoveredRegion","currentMap","setCurrentMap","onlyMH","region","getRegionFromState","useMemo","currentMapData","reduce","acc","districtWiseData","getRegionFromDistrict","undefined","newMap","switchMapToState","topDistrict","b","TimeSeries","timeseries","setTimeseries","datapoint","setDatapoint","setIndex","mode","setMode","logMode","setLogMode","update","setUpdate","moving","setMoving","graphElement1","graphElement2","graphElement3","graphElement4","graphElement5","graphElement6","u","graphData","svg1","svg2","svg3","svg4","svg5","svg6","margin","dateMin","setDate","getDate","dateMax","x","range","indexScale","svgArray","colors","logCharts","Set","dTypeMaxMap","c","yScales","entries","type","maxY","applyLogMode","has","nice","match","y","dataTypeIdx","dType","max","focus","mouseout","mousemove","xm","this","round","invert","f","j","s","ticks","scaleIdx","ceil","log10","tickCount","tickPadding","tickFormat","dots","datum","curve","refreshGraphs","graphs","yesterdayDate","lastDate","isYesterday","getMonth","Home","setStateDistrictWiseData","fetched","setFetched","graphOption","setGraphOption","setLastUpdated","setActivityLog","timeseriesMode","setTimeseriesMode","timeseriesLogMode","setTimeseriesLogMode","setRegionHighlighted","getStates","Promise","all","axios","get","response","stateDistrictWiseResponse","updateLogResponse","statewise","cases_time_series","mhTracker","emInitiative","htmlFor","checked","aria-label","onChange","event","disabled","Services","tableName","React","servicesArray","setServices","deviceLang","navigator","filteredServices","setFilteredServices","singleServiceArray","setSingleServiceArray","servicesToShowFitlered","setServicesToShowFitlered","serviceTableRef","Airtable","apiKey","base","maxRecords","view","eachPage","records","fetchNextPage","record","fields","error","districtNamesList","districtNames","en","servicesToShow","image","selectedDistrict","setSelectedDistrict","selectedService","setSelectedService","onSelectedService","item","newfilteredServices","service","Category","scrollTo","left","top","offsetTop","behavior","scrollToRef","marginBottom","isClearable","placeholder","selectDistrict","options","District","filteredServicesToShow","showService","push","onSelectDistrict","singleService","src","pleaseSelectDistrict","Name","Region","contact","Contact","Comments","additionalInfo","FundDetails","Navbar","initialValue","storedValue","setStoredValue","valueToStore","Function","stringify","useLocalStorage","setLanguage","location","pathname","transition","alt","pages","page","to","pageLink","animationDelayForNavbar","displayName","changeLang","then","reload","Links","href","rel","textTransform","FAQ","faq","question","faqq1","answer","faqa1","faqq2","faqa2","faqq3","faqa3","faqq4","faqa4","faqq5","faqa5","dangerouslySetInnerHTML","__html","helpNeededMsg","frameborder","marginheight","marginwidth","history","require","createBrowserHistory","App","home","services","helpfulLinks","about","Volunteers","volunteers","render","exact","component","poweredBy","inspiredBy","whatsappGroup","slackChannel","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","registration","unregister","catch","message"],"mappings":"2quBAGMA,G,MAAS,CACb,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,GAAM,MACN,GAAM,MACN,GAAM,QA+CKC,EAAa,SAACC,GACzB,IAAMC,EAAMD,EAAgBE,MAAM,EAAG,GAC/BC,EAAQH,EAAgBE,MAAM,EAAG,GACjCE,EAAOJ,EAAgBE,MAAM,EAAG,IAChCG,EAAOL,EAAgBE,MAAM,IACnC,MAAM,GAAN,OAAUE,EAAV,YAAkBD,EAAlB,YAA2BF,EAA3B,YAAkCI,EAAlC,WAGWC,EAAqB,SAACN,GACjC,IAAMC,EAAMD,EAAgBE,MAAM,EAAG,GAC/BC,EAAQH,EAAgBE,MAAM,EAAG,GACjCG,EAAOL,EAAgBE,MAAM,IACnC,MAAM,GAAN,OAAUD,EAAV,YAAiBH,EAAOK,GAAxB,aAAmCE,EAAKH,MAAM,EAAG,GAAjD,SAGWK,EAAc,WAAgB,IAAfC,EAAc,uDAAP,GAC3BC,EAAQ,IAAIC,KAClBD,EAAME,SAAS,EAAG,EAAG,EAAG,GACxB,IAAMC,EAAY,CAChB,iBACA,gBACA,iBACA,iBACA,gBACA,kBAEF,OAAOJ,EACJK,QAAO,SAACC,GAAD,OAAOF,EAAUG,OAAM,SAACC,GAAD,OAAQF,EAAEE,OAAQF,EAAEG,QAClDJ,QAAO,SAACC,GAAD,OAAOF,EAAUG,OAAM,SAACC,GAAD,OAAQE,OAAOJ,EAAEE,KAAQ,QACvDH,QAAO,SAACC,GACP,IAAMV,EAAOK,EAAMU,cACnB,OAAO,IAAIT,KAAKI,EAAEG,KAAOb,GAAQK,M,sCCwNxBW,MA/Sf,SAAaC,GAAQ,IAAD,EACQC,mBAASD,EAAME,OADvB,mBACXA,EADW,KACJC,EADI,OAEgBF,mBAASD,EAAMI,WAF/B,mBAEXA,EAFW,KAEAC,EAFA,OAG4BJ,mBAASD,EAAMI,WAH3C,mBAGXE,EAHW,KAGMC,EAHN,OAIcN,mBAAS,CACvCO,WAAYC,aAAaC,QAAQ,uBAC7BD,aAAaC,QAAQ,uBACrB,YACJC,cAAaF,aAAaC,QAAQ,yBACmB,SAAjDD,aAAaC,QAAQ,0BATT,mBAIXE,EAJW,KAIDC,EAJC,KAalBC,qBAAU,WACRX,EAASH,EAAME,SACd,CAACF,EAAME,QAEVY,qBAAU,WACRT,EAAaL,EAAMI,WACnBG,EAAmBP,EAAMI,aACxB,CAACJ,EAAMI,YAEV,IAIMW,EAAgBC,uBACpB,SAACC,GACC,IAAMC,EAAS,GACXD,IACFE,OAAOC,KAAKH,GACTI,MAAK,SAACC,EAAWC,GAChB,IAAMf,EAAaI,EAASJ,WACtBgB,EACW,aAAfhB,EACIc,EACAG,SAASR,EAAWK,GAAWI,WAC/BC,EACW,aAAfnB,EACIe,EACAE,SAASR,EAAWM,GAAWG,WAC/BE,EACJJ,EAASG,GAELH,IAAWG,GAAUL,EAAYC,EADjC,GAGC,EACP,OAAOX,EAASD,YACZiB,GACmB,EAAnBA,KAELC,SAAQ,SAACC,GACRZ,EAAOY,GAAOb,EAAWa,MAE7BvB,EAAmBW,MAGvB,CAACN,EAASD,YAAaC,EAASJ,aAG5BuB,EAAa,SAACC,GAClB,IAAMrB,EACJC,EAASJ,aAAewB,GACnBpB,EAASD,YACc,aAAxBC,EAASJ,WACfK,EAAY,CACVL,WAAYwB,EACZrB,YAAaA,IAEfF,aAAawB,QAAQ,sBAAuBD,GAC5CvB,aAAawB,QAAQ,uBAAwBtB,IAO/C,OAJAG,qBAAU,WACRC,EAAcX,KACb,CAACA,EAAWQ,EAAUG,IAGvB,kBAAC,IAAMmB,SAAP,KACE,wBACEC,UAAWnC,EAAMoC,MAAQ,iBAAmB,QAC5CC,aAAc,kCAAMrC,EAAMsC,wBAAZ,aAAM,OAAAtC,EAAyBE,EAAOF,EAAMuC,QAC1DC,aAAc,kCAAMxC,EAAMsC,wBAAZ,aAAM,OAAAtC,IACpByC,WAAY,kCAAMzC,EAAMsC,wBAAZ,aAAM,OAAAtC,EAAyBE,EAAOF,EAAMuC,QACxDG,QAAU1C,EAAMoC,MAAuB,KA9DxB,WACnBpC,EAAM2C,aAAa3C,EAAME,MAAMA,QA8D3B0C,MAAO,CAACC,WAAY7C,EAAMuC,MAAQ,IAAM,EAAI,UAAY,KAExD,wBAAIK,MAAO,CAACE,WAAY,MACtB,yBAAKX,UAAU,wBAAf,UAsBF,4BACE,0BAAMA,UAAU,SAASS,MAAO,CAACG,MAAO,YACrC7C,EAAM8C,eAAiB,GAAK,kBAAC,IAAD,MAC5B9C,EAAM8C,eAAiB,EAAvB,UAA8B9C,EAAM8C,gBAAmB,IAE1D,0BAAMb,UAAU,qBACiB,IAA9BV,SAASvB,EAAMwB,WAAmB,IAAMxB,EAAMwB,YAGnD,wBACEkB,MAAO,CAACG,MAAkC,IAA3BtB,SAASvB,EAAM+C,QAAgB,UAAY,YAM9B,IAA3BxB,SAASvB,EAAM+C,QAAgB,IAAM/C,EAAM+C,QAE9C,wBACEL,MAAO,CACLG,MAAqC,IAA9BtB,SAASvB,EAAMgD,WAAmB,UAAY,YAGvD,0BAAMf,UAAU,SAASS,MAAO,CAACG,MAAO,YACrC7C,EAAMiD,eAAiB,GAAK,kBAAC,IAAD,MAC5BjD,EAAMiD,eAAiB,EAAvB,UAA8BjD,EAAMiD,gBAAmB,IAE1D,0BAAMhB,UAAU,qBACiB,IAA9BV,SAASvB,EAAMgD,WAAmB,IAAMhD,EAAMgD,YAGnD,wBACEN,MAAO,CAACG,MAAkC,IAA3BtB,SAASvB,EAAMkD,QAAgB,UAAY,YAE1D,0BAAMjB,UAAU,SAASS,MAAO,CAACG,MAAO,YACrC7C,EAAMmD,YAAc,GAAK,kBAAC,IAAD,MACzBnD,EAAMmD,YAAc,EAApB,UAA2BnD,EAAMmD,aAAgB,IAEpD,0BAAMlB,UAAU,qBACc,IAA3BV,SAASvB,EAAMkD,QAAgB,IAAMlD,EAAMkD,UAKlD,wBACEjB,UAAW,oBACXS,MAAO,CAACU,QAAStD,EAAMuD,SAAWvD,EAAMoC,MAAQ,GAAK,SAErD,wBAAIoB,QAAS,GACX,yBAAKrB,UAAU,eACb,gDACA,wBACEsB,MACEC,MAAMrE,KAAKsE,MAAMjF,EAAWsB,EAAME,MAAM0D,mBACpC,GACA3E,EAAmBe,EAAME,MAAM0D,kBAGpCF,MAAMrE,KAAKsE,MAAMjF,EAAWsB,EAAME,MAAM0D,mBACrC,GADH,UAEMC,YACD,IAAIxE,KAAKX,EAAWsB,EAAME,MAAM0D,kBAChC,IAAIvE,MAJT,YAWT,wBACE8C,UAAS,mBACTS,MAAO,CAACU,QAAStD,EAAMuD,SAAWvD,EAAMoC,MAAQ,GAAK,SAErD,wBAAIM,QAAS,SAACoB,GAAD,OAAO/B,EAAW,cAC7B,yBAAKI,UAAU,mBACb,0BAAMsB,MAAM,YAAZ,YACA,yBACEb,MAAO,CACLU,QAC0B,aAAxB1C,EAASJ,WAA4B,UAAY,SAGpDI,EAASD,YACR,yBAAKwB,UAAU,aAEf,yBAAKA,UAAU,kBAKvB,wBAAIO,QAAS,SAACoB,GAAD,OAAO/B,EAAW,eAC7B,yBAAKI,UAAU,mBACb,0BACEA,UAAS,UAAK4B,OAAOC,YAAc,IAAM,YAAc,IACvDP,MAAM,aAELM,OAAOC,YAAc,IAClBD,OAAOC,YAAc,IACnB,IACA,QACF,aAEN,yBACEpB,MAAO,CACLU,QAC0B,cAAxB1C,EAASJ,WAA6B,UAAY,SAGrDI,EAASD,YACR,yBAAKwB,UAAU,aAEf,yBAAKA,UAAU,mBAMxB8B,QAAQC,IAAI,mBAAmB5D,GAC/BA,GACCa,OAAOC,KAAKd,GACTd,QAAO,SAAC2E,GAAD,MAAyC,YAA3BA,EAASC,iBAC9BC,KAAI,SAACF,EAAU5B,GACd,MAA+B,YAA3B4B,EAASC,eAA0D,aAA3BD,EAASC,cAEjD,wBACEtC,IAAKS,EACLJ,UAAS,WACTS,MAAO,CACLU,QAAStD,EAAMuD,SAAWvD,EAAMoC,MAAQ,GAAK,OAC7CS,WAAYN,EAAQ,IAAM,EAAI,UAAY,IAE5CF,aAAc,kCACZrC,EAAMsE,2BADM,aACZ,OAAAtE,EAA4BmE,EAAUjE,EAAOF,EAAMuC,QAErDC,aAAc,kCAAMxC,EAAMsE,2BAAZ,aAAM,OAAAtE,IACpByC,WAAY,kCACVzC,EAAMsE,2BADI,aACV,OAAAtE,EAA4BmE,EAAUjE,EAAOF,EAAMuC,SAGrD,wBAAIK,MAAO,CAACE,WAAY,MAAOqB,GAC/B,4BACE,0BAAMhC,UAAU,SAASS,MAAO,CAACG,MAAO,YACrCzC,EAAgB6D,GAAUI,MAAM7C,UAAY,GAC3C,kBAAC,IAAD,MAEDpB,EAAgB6D,GAAUI,MAAM7C,UAAY,EAA5C,UACMpB,EAAgB6D,GAAUI,MAAM7C,WACnC,IAEN,0BAAMS,UAAU,qBACb7B,EAAgB6D,GAAUzC,aAM9B,SAGG,OAAfpB,QAAe,IAAfA,OAAA,EAAAA,EAAiBkE,UAChB,wBACErC,UAAS,WACTS,MAAO,CAACU,QAAStD,EAAMuD,SAAWvD,EAAMoC,MAAQ,GAAK,SAErD,wBAAIQ,MAAO,CAACE,WAAY,MAAxB,WACA,4BACE,0BAAMX,UAAU,SAASS,MAAO,CAACG,MAAO,YACrCzC,EAAe,QAAYiE,MAAM7C,UAAY,GAC5C,kBAAC,IAAD,MAEDpB,EAAe,QAAYiE,MAAM7C,UAAY,EAA7C,UACMpB,EAAe,QAAYiE,MAAM7C,WACpC,IAEN,0BAAMS,UAAU,qBACb7B,EAAe,QAAYoB,aAMpC,wBACES,UAAS,SACTS,MAAO,CAACU,QAAStD,EAAMuD,SAAWvD,EAAMoC,MAAQ,GAAK,SAErD,6BACA,6BACA,gC,SC5SJqC,EAAWV,OAAOtD,aAAaC,QAAQ,YAI9BgE,EAAmBC,EAFhCF,EAAWA,EAAWG,KAAKjB,MAAMc,GAAY,MCsS9BI,MArSf,SAAe7E,GAAQ,IAAD,EACQC,mBAASD,EAAM8E,QADvB,mBACbA,EADa,KACLC,EADK,OAGiB9E,mBAASD,EAAM8E,QAHhC,mBAGDE,GAHC,aAIwB/E,mBAAS,IAJjC,mBAIbgF,EAJa,KAIGC,EAJH,OAKcjF,mBAAS,IALvB,mBAKbG,EALa,KAKFC,EALE,OAMMJ,mBAAS,GANf,gCAOYA,mBAAS,CACvCO,WAAYC,aAAaC,QAAQ,oBAC7BD,aAAaC,QAAQ,oBACrB,YACJC,cAAaF,aAAaC,QAAQ,sBACgB,SAA9CD,aAAaC,QAAQ,wBAZP,mBAObE,EAPa,KAOHC,EAPG,KAwBpBC,qBAAU,WACR,IAAsB,IAAlBd,EAAMmF,QAAkB,CAC1BJ,EAAU/E,EAAM8E,OAAOjG,MAAM,EAAG,IAChC,IAAMuG,EAAkBpF,EAAM8E,OAAOtF,QAAO,SAAAU,GAC1C,OAAOA,GAA4B,MAAnBA,EAAMmF,aAExBL,EAAeI,OACV,CACLL,EAAU/E,EAAM8E,QAChB,IAAMM,EAAkBpF,EAAM8E,OAAOtF,QAAO,SAAAU,GAC1C,OAAOA,GAA4B,MAAnBA,EAAMmF,aAExBL,EAAeI,MAEhB,CAACpF,EAAM8E,OAAQ9E,EAAMmF,UAExBrE,qBAAU,WACJd,EAAM8E,OAAO,IACfI,EACE,CAACI,aAAa,MAGjB,CAACtF,EAAM8E,SASVhE,qBAAU,WACRT,EAAaL,EAAMuF,yBAClB,CAACvF,EAAMuF,wBAGV,IA6BMxD,EAAa,SAAC+B,EAAG9D,GACrB,IAAMwF,EAAoB1B,EAAE2B,cACzBC,cAAc,QACdC,aAAa,SACbvB,cACGzD,EACJC,EAASJ,aAAegF,GACnB5E,EAASD,YACc,UAAxBC,EAASJ,WACfK,EAAY,CACVL,WAAYgF,EACZ7E,YAAaA,IAEfF,aAAawB,QAAQ,mBAAoBuD,GACzC/E,aAAawB,QAAQ,oBAAqBtB,IAGtCgC,EAAe,SAACzC,GACpBgF,EAAkB,eACbD,EADY,eAEd/E,GAAS+E,EAAe/E,OAM7B,OAvDe,SAAC4D,EAAG9D,GACjB,IAAM4F,EAAWd,EAAOe,OAAO,EAAG,GAClCf,EAAOzD,MAAK,SAACyE,EAAYC,GACvB,IAAMvF,EAAaI,EAASJ,WACxBgB,EAASsE,EAAWtF,GACpBmB,EAASoE,EAAWvF,GAOxB,MALmB,UAAfA,IACFgB,EAASC,SAASqE,EAAWtF,IAC7BmB,EAASF,SAASsE,EAAWvF,KAG3BI,EAASD,YACJa,EAASG,GAEZH,IAAWG,GAAUmE,EAAU,MAAYC,EAAU,MADrD,GAGC,EAEEvE,EAASG,GAEZH,IAAWG,GAAUmE,EAAU,MAAYC,EAAU,MADrD,GAGC,KAGTjB,EAAOkB,QAAQJ,EAAS,IA2B1BK,GAGE,kBAAC,IAAM/D,SAAP,KACE,wBAAIC,UAAU,2BAA2BS,MAAO,CAACsD,eAAgB,UAGjE,2BAAO/D,UAAU,iBAAiBS,MAAO,CAACsD,eAAgB,SACxD,+BACE,4BACE,wBACE/D,UAAU,gBACVO,QAAS,SAACoB,GAAD,OAAO/B,EAAW+B,KAE3B,yBAAK3B,UAAU,mBACb,0BAAMsB,MAAM,SAAZ,IAAuBiB,EAAiByB,YAAxC,KACA,yBACEvD,MAAO,CACLU,QAC0B,UAAxB1C,EAASJ,WAAyB,UAAY,SAGjDI,EAASD,YACR,yBAAKwB,UAAU,aAEf,yBAAKA,UAAU,kBAKvB,wBAAIA,UAAU,GAAGO,QAAS,SAACoB,GAAD,OAAO/B,EAAW+B,KAC1C,yBAAK3B,UAAU,mBACb,0BACEA,UAAS,UAAK4B,OAAOC,YAAc,IAAM,YAAc,IACvDP,MAAM,aAELM,OAAOC,YAAc,IAClBD,OAAOC,YAAc,IACnB,IACA,QACF,aAEN,yBACEpB,MAAO,CACLU,QAC0B,cAAxB1C,EAASJ,WAA6B,UAAY,SAGrDI,EAASD,YACR,yBAAKwB,UAAU,aAEf,yBAAKA,UAAU,kBAKvB,wBAAIA,UAAU,GAAGO,QAAS,SAACoB,GAAD,OAAO/B,EAAW+B,KAC1C,yBAAK3B,UAAU,mBACb,0BACEA,UAAS,UAAK4B,OAAOC,YAAc,IAAM,UAAY,IACrDP,MAAM,UAELM,OAAOC,YAAc,IAClBD,OAAOC,YAAc,IACnB,IACA,OACF,UAEN,yBACEpB,MAAO,CACLU,QAC0B,WAAxB1C,EAASJ,WAA0B,UAAY,SAGlDI,EAASD,YACR,yBAAKwB,UAAU,aAEf,yBAAKA,UAAU,kBAKvB,wBAAIA,UAAU,GAAGO,QAAS,SAACoB,GAAD,OAAO/B,EAAW+B,KAC1C,yBAAK3B,UAAU,mBACb,0BACEA,UAAS,UAAK4B,OAAOC,YAAc,IAAM,WAAa,IACtDP,MAAM,aAELM,OAAOC,YAAc,IAClBD,OAAOC,YAAc,IACnB,IACA,QACF,aAEN,yBACE7B,UAC0B,cAAxBvB,EAASJ,WAA6B,aAAe,KAGzD,yBACEoC,MAAO,CACLU,QAC0B,cAAxB1C,EAASJ,WAA6B,UAAY,SAGrDI,EAASD,YACR,yBAAKwB,UAAU,aAEf,yBAAKA,UAAU,kBAKvB,wBAAIA,UAAU,GAAGO,QAAS,SAACoB,GAAD,OAAO/B,EAAW+B,KAC1C,yBAAK3B,UAAU,mBACb,0BACEA,UAAS,UAAK4B,OAAOC,YAAc,IAAM,UAAY,IACrDP,MAAM,UAELM,OAAOC,YAAc,IAClBD,OAAOC,YAAc,IACnB,IACA,OACF,YAEN,yBACEpB,MAAO,CACLU,QAC0B,WAAxB1C,EAASJ,WAA0B,UAAY,SAGlDI,EAASD,YACR,yBAAKwB,UAAU,aAEf,yBAAKA,UAAU,oBAQ3B,+BACG2C,EAAOT,KAAI,SAACnE,EAAOqC,GAClB,OAAc,IAAVA,GAAerC,EAAMwB,UAAY,GAAyB,OAApBxB,EAAMmF,UAE5C,kBAAC,EAAD,CACEvD,IAAKS,EACLA,MAAOA,EACPrC,MAAOA,EACPkC,OAAO,EACPmB,OAAQ0B,EAAe/E,EAAMA,OAC7BE,UACEF,EAAMA,SAASE,EACXA,EAAUF,EAAMA,OAAOkG,aACvB,GAEN9D,iBAAkBtC,EAAMsC,iBACxBgC,oBAAqBtE,EAAMsE,oBAC3B3B,aAAcA,IAIb,YClLJ0D,I,yBCxGFC,EACF,UADEA,EAEJ,QCIHC,EAAmB,CACvBC,QAAS,QACTtG,MAAO,YA6OMuG,MA1Of,YAOI,IANFC,EAMC,EANDA,UACAC,EAKC,EALDA,QACAC,EAIC,EAJDA,iBACAC,EAGC,EAHDA,QACAC,EAEC,EAFDA,UACAC,EACC,EADDA,eAEMC,EAAgBC,iBAAO,MAD5B,EAE2ChH,mBAAS,GAFpD,mBAEMiH,EAFN,KAEsBC,EAFtB,KAIKC,EAAQpG,uBACZ,SAACqG,GACCC,IAAa,iBAAiBC,SAC9B,IAAMC,EAAgBjB,EAAiBM,EAAQY,SAEzCC,EAAMJ,IAAUN,EAAcW,SAC9BC,GAASF,EAAIG,KAAK,SAClBC,GAAUJ,EAAIG,KAAK,UAUnBE,EAAWC,IACfX,EACAA,EAAQY,QAAQpB,EAAQqB,kBAGpBC,EAAab,MAEfT,EAAQY,UAAYnB,EACtB6B,EAAWC,QAAQ,CAACR,EAAOE,GAASC,GAEpCI,EAAWE,UACT,CACE,CAAC,GAAI,IACL,CAACT,EAAOE,IAEVC,GAGJ,IAAMO,EAAOhB,IAAWa,GAEpBI,EAAoB,KAExBb,EACGc,OAAO,KACPX,KAAK,QAAS,UACdY,UAAU,QACVtJ,KAAK4I,EAASW,UACdC,QACAH,OAAO,QACPX,KAAK,QAAS,eACdA,KAAK,QAAQ,SAAUpI,GACtB,IAAMmJ,EAAInH,SAASkF,EAAQlH,EAAEoJ,WAAWrB,MAAoB,EAO5D,OALQ,IAANoB,EACI,UACAtB,IAhDe,GAiDOsB,GAAMlC,EAAUoC,cAAgB,UAI7DjB,KAAK,IAAKS,GACVT,KAAK,iBAAkB,OACvBkB,GAAG,aAAa,SAACtJ,IAlDI,SAACuJ,GACvB,IACEpC,EAAiBoC,EAAMnC,GACvB,MAAOoC,GACPhF,QAAQC,IAAI,MAAO+E,IA+CnBC,CAAgBzJ,EAAEoJ,WAAWrB,IAC7B,IAAM2B,EAAS7B,IAAS6B,OACxB7B,IAAU6B,EAAOC,WAAWC,YAAYF,IAAStB,KAC/C,QACA,gBAGHkB,GAAG,cAAc,SAACtJ,GACjB,IAAM0J,EAAS7B,IAAS6B,OACxB7B,IAAU6B,GAAQtB,KAAK,QAAS,2BAC5BU,IAAsB9I,IAAG8I,EAAoB,SAElDQ,GAAG,cAAc,SAACtJ,GACY8I,EAAzBA,IAAsB9I,EAAuB,KACxBA,KAE1BsJ,GAAG,SAAS,SAACtJ,GACR8I,GAGA1B,EAAQY,UAAYnB,GAGxBQ,EAAUrH,EAAEoJ,WAAWrB,GAAgBX,EAAQY,YAEhD7E,MAAM,SAAU,WAChB4F,OAAO,SACPc,MAAK,SAAU7J,GACd,IAAM8J,EAAQ5C,EAAQlH,EAAEoJ,WAAWrB,KAAmB,EACtD,OACE3H,OACE2J,WAAkBD,GAAS7C,EAAUtE,OAAS,MAAnC,KAA4CqH,QAAQ,IAC/DC,WACF,UACAC,EAAYlK,EAAEoJ,WAAWrB,OAI/BE,EACGc,OAAO,QACPX,KAAK,SAAU,aACfA,KAAK,OAAQ,QACbA,KAAK,eAAgB,GACrBA,KACC,IACAS,EAAKN,IAAcX,EAASA,EAAQY,QAAQpB,EAAQqB,sBAG1D,CACEvB,EACAE,EACAH,EAAUtE,MACVsE,EAAUoC,aACVhC,EACAF,IAIE+C,EAAc,SAACC,GACnBA,EAAMA,EAAIxF,cAAcyF,MAAM,KAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAC9BF,EAAIE,GAAKF,EAAIE,GAAGE,OAAO,GAAGC,cAAgBL,EAAIE,GAAGjL,MAAM,GAEzD,OAAO+K,EAAIM,KAAK,MAGZC,EAAanJ,uBAAY,WAC7B,IAQIoJ,EACAC,EATE3C,EAAMJ,IAAUN,EAAcW,SAI9B5E,EAAQuE,IACKA,KAChBgD,OAAO,CAAC,EAAG5D,EAAUoC,aAHC,IAGkC,KAK3DuB,EAAQ,YAAsD,IAApDP,EAAmD,EAAnDA,EAAGS,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,gBAAqC,EAApBC,eACvC,GAAIX,IAAMS,EAAY,EAAG,CACvB,IAAM3B,EAAI8B,KAAKC,MAAMH,EAAgBV,IACrC,MAAM,GAAN,OAAUlB,EAAV,KAEA,IAAMgC,EAAK,EAAIF,KAAKC,MAAMH,EAAgBV,IACpCe,EAAKH,KAAKC,MAAMH,EAAgBV,EAAI,IAC1C,MAAM,GAAN,OAAUc,EAAV,cAAkBC,IAItB,IACMtG,EAAQmG,KAAKC,OAChBjE,EAAUoC,aAFI,IAEiCpC,EAAUoC,cAA1D,GAIFsB,EAAQU,MAAMC,KAAKD,MANF,GAMkB1J,QAAQiD,KAAI,SAACyF,GAAD,OAAOA,EAAIvF,KAE1DmD,EACGc,OAAO,KACPX,KAAK,QAAS,gBACdA,KAAK,YAAa,qBAErB,IAAMmD,EAAeC,cAClBC,WAAW,IACXC,YAAY,IACZf,MAAMA,GACNgB,WAAW,GACXC,OAAOhB,GACP5G,MAAM,mBACN6H,OAAO,YACPC,MAAMxI,GAET2E,EACG8D,OAAO,iBACPC,KAAKT,GACLvC,UAAU,QACV7F,MAAM,YAAa,UACrB,CAAC8D,EAAUoC,eAgCd,OA9BAhI,qBAAU,WACR,sBAAC,4BAAA4K,EAAA,sEACoBpE,IAAQT,EAAQ8E,aADpC,OACOxM,EADP,OAEKuH,GAAaM,EAAcW,UAC7BP,EAAMjI,GACNgL,IACAhD,GAAkB,SAACyE,GAAD,OAAeA,EAAY,MALhD,0CAAD,KAQC,CAAC/E,EAAQ8E,YAAajF,EAAWyD,EAAY/C,IAiBhDtG,qBAAU,WAfmB,IAACkI,IAgBPjC,EAfPO,IAAa,gBACrBuE,QAAQ,aAAa,SAACpM,EAAGqK,EAAGgC,GAChC,IAAMtE,EACJ,aAAc/H,EAAEoJ,WACZtC,EAAgB,MAChBA,EAAgB,QACtB,OAAIyC,IAASvJ,EAAEoJ,WAAWrB,KACxBsE,EAAMhC,GAAGV,WAAWC,YAAYyC,EAAMhC,KAC/B,QAQV,CAAC5C,EAAgBH,IAGlB,yBAAK5E,UAAU,sBAAsBS,MAAO,CAACsD,eAAgB,SAC3D,yBACE6F,GAAG,QACHnE,MAAM,MACNE,OAAO,MACPkE,QAAQ,cACRC,oBAAoB,gBACpBC,IAAKlF,MCxOPH,EAAU,CACdvB,YAAa,CACX0D,KAAM,cACN2C,YAAY,GAAD,OFLS,QEKT,qBACXlE,QAASnB,EACT4B,gBAAiB,yBAIN,cAA+D,IAApDpD,EAAmD,EAAnDA,OAAQS,EAA2C,EAA3CA,sBAAuB4G,EAAoB,EAApBA,kBAAoB,EAC/BlM,mBAAS,IADsB,mBACpE8G,EADoE,KACpDqF,EADoD,OAEnBnM,mBAAS,IAFU,mBAEpEoM,EAFoE,KAE9CC,EAF8C,OAGvCrM,mBAAS4G,EAAQvB,aAHsB,mBAGpEiH,EAHoE,KAGxDC,EAHwD,KAgB3E,GAXA1L,qBAAU,WACRmD,QAAQC,IAAI,gBAAgBY,GAC5B,IAAM2H,EAAS3H,EAAOtF,QAAO,SAAAU,GAC3B,MAA2B,OAApBA,EAAMmF,aAETqH,EAASC,EAAmBF,EAAO,IAEzCxI,QAAQC,IAAIwI,GACZJ,EAAwBI,KACvB,CAAC5H,KAECuH,EACH,OAAO,KAjBkE,MAoBvCO,mBAAQ,WAC1C,IAAMlG,EAAY,CAACtE,MAAO,EAAG0G,aAAc,GACvC+D,EAAiB,GAErB,GAAIN,EAAW9E,UAAYnB,EACzBuG,EAAiB/H,EAAOgI,QAAO,SAACC,EAAK7M,GACnC,GAAoB,UAAhBA,EAAMA,MACR,OAAO6M,EAET,IAAMrL,EAAYD,SAASvB,EAAMwB,WAOjC,OANAgF,EAAUtE,OAASV,EACfA,EAAYgF,EAAUoC,eACxBpC,EAAUoC,aAAepH,GAG3BqL,EAAI7M,EAAMA,OAASA,EAAMwB,UAClBqL,IACN,SACE,GAAIR,EAAW9E,UAAYnB,EAAiB,CACjD,IAAM0G,GACJzH,EAAsBgH,EAAWvD,OAAS,CAAC5C,aAAc,KACzDA,aACFyG,EAAiB1L,OAAOC,KAAK4L,GAAkBF,QAAO,SAACC,EAAK5I,GAC1D,IAAMzC,EAAYD,SAASuL,EAAiB7I,GAAUzC,WAMtD,OALAgF,EAAUtE,OAASV,EACfA,EAAYgF,EAAUoC,eACxBpC,EAAUoC,aAAepH,GAE3BqL,EAAI5I,GAAY6I,EAAiB7I,GAAUzC,UACpCqL,IACN,IAEL,MAAO,CAACrG,EAAWmG,KAClB,CAACN,EAAYzH,EAAQS,IArDmD,mBAoBpEmB,EApBoE,KAoBzDmG,EApByD,KAuDrEjG,EAAmB5F,uBACvB,SAACgI,EAAMuD,GACL,GAAIA,EAAW9E,UAAYnB,EACzBgG,EACEK,EAAmB7H,EAAOtF,QAAO,SAACU,GAAD,OAAW8I,IAAS9I,EAAMA,SAAO,UAE/D,GAAIqM,EAAW9E,UAAYnB,EAAiB,CACjD,IAGIF,GAHUb,EAAsBgH,EAAWvD,OAAS,CACtD5C,aAAc,KAESA,aAAa4C,GACjC5C,IACHA,EAAe,CACb1E,UAAW,EACXuB,OAAQ,EACRG,OAAQ,EACRF,UAAW,IAGfoJ,EAAwBW,EAAsB7G,EAAc4C,OAGhE,CAACzD,EAAuBT,IAG1BhE,qBAAU,WACR,QAA0BoM,IAAtBf,EAEG,GAA0B,OAAtBA,EAKX,KADkB,aAAcA,GACnB,CAEXK,EADe3F,EAAO,aAEtB,IAAM6F,EAASC,EAAmBR,EAAkBjM,OACpDoM,EAAwBI,GACxBN,EAAkBM,EAAO1D,UACpB,CACL,IAAMmE,EAAStG,EAAQsF,EAAkBjM,MAAMA,OAC/C,IAAKiN,EACH,OAEFX,EAAcW,GACdvG,EAAiBuF,EAAkBhI,SAAUgJ,GAC7Cf,EAAkBD,EAAkBhI,eAjBpCiI,EAAkB,QAmBnB,CAACD,EAAmBI,EAAW9E,QAASb,IAE3C,IAAMqG,EAAwB,SAAC7G,EAAc4C,GAC3C,GAAK5C,EAAL,CAGA,IAAMsG,EAAM,eAAOtG,GAInB,OAHKsG,EAAO1D,OACV0D,EAAO1D,KAAOA,GAET0D,IAGHC,EAAqB,SAACzM,GAC1B,GAAKA,EAAL,CAGA,IAAMwM,EAAM,eAAOxM,GAInB,OAHKwM,EAAO1D,OACV0D,EAAO1D,KAAO0D,EAAOxM,OAEhBwM,IAGHU,EAAmBpM,uBACvB,SAACgI,GACC,IAAMmE,EAAStG,EAAQmC,GACvB,GAAKmE,IAGLX,EAAcW,GACTA,EAAO1F,UAAYnB,GAAiB,CACvC,IAAMF,GAAgBb,EAAsByD,IAAS,CAAC5C,aAAc,KACjEA,aACGiH,EAAclM,OAAOC,KAAKgF,GAC7B5G,QAAO,SAACwJ,GAAD,MAAmB,YAATA,KACjB3H,MAAK,SAACqK,EAAG4B,GACR,OAAOlH,EAAakH,GAAG5L,UAAY0E,EAAasF,GAAGhK,aAClD,GACLkF,EAAiByG,EAAaF,MAGlC,CAACvG,EAAkBrB,EAAuBT,IAErCkE,EAAyBqD,EAAzBrD,KAAMpF,EAAmByI,EAAnBzI,gBAEb,OACE,yBAAKzB,UAAU,uBAAuBS,MAAO,CAACsD,eAAgB,SAC5D,yBAAK/D,UAAU,UACb,4BAAKoK,EAAWvD,MAChB,4BACGjF,OAAOC,YAAc,IAAM,MAAQ,QADtC,UACsD,IACnDuI,EAAW9E,UAAYnB,EAAoB,WAAa,WAAY,IAFvE,qBAOF,yBAAKnE,UAAU,aACb,yBAAKA,UAAU,iBAAiBS,MAAO,CAACsD,eAAgB,OACtD,yCACA,yBAAK/D,UAAU,gBACb,4BAAKkK,EAAqB3K,WAC1B,+BAIJ,yBACES,UAAU,yBACVS,MAAO,CAACsD,eAAgB,SAExB,sCACA,yBAAK/D,UAAU,gBACb,4BAAKkK,EAAqBpJ,QAAU,IACpC,+BAIJ,yBACEd,UAAU,0BACVS,MAAO,CAACsD,eAAgB,SAExB,yCACA,yBAAK/D,UAAU,gBACb,4BAAKkK,EAAqBnJ,WAAa,IACvC,+BAIJ,yBACEf,UAAU,yBACVS,MAAO,CAACsD,eAAgB,SAExB,wCACA,yBAAK/D,UAAU,gBACb,4BAAKkK,EAAqBjJ,QAAU,IACpC,gCAKN,yBAAKjB,UAAU,gBAAgBS,MAAO,CAACsD,eAAgB,SACrD,4BAAK8C,GACJpF,GACC,yBACEzB,UAAS,sBACPoK,EAAW9E,UAAYnB,EACnB,uBACA,sBAGN,4CACA,wBACE7C,MACEC,MAAMrE,KAAKsE,MAAMjF,EAAWkF,KACxB,GACA3E,EAAmB2E,IAGxBF,MAAMrE,KAAKsE,MAAMjF,EAAWkF,KACzB,GACAC,YACE,IAAIxE,KAAKX,EAAWkF,IACpB,IAAIvE,MACF,SAKbkN,EAAW9E,UAAYnB,GACxBuG,EAAerI,QAAU,EACvB,wBAAIrC,UAAU,WAAd,yBACyB0K,EAAerI,QADxC,WAGE,MAYN,kBAAC,EAAD,CACEkC,UAAWA,EACXG,QAAS0F,EACT5F,QAASkG,EACTjG,iBAAkBA,EAClBE,UAAWsG,EACXrG,eAAgBA,MC0OTwG,MArff,SAAoBvN,GAAQ,IAAD,EACWC,mBAAS,IADpB,mBAClBuN,EADkB,KACNC,EADM,OAESxN,mBAAS,IAFlB,mBAElByN,EAFkB,KAEPC,EAFO,OAGC1N,mBAAS,IAHV,mBAGlBsC,EAHkB,KAGXqL,EAHW,OAID3N,mBAASD,EAAM6N,MAJd,mBAIlBA,EAJkB,KAIZC,EAJY,OAKK7N,mBAASD,EAAM+N,SALpB,mBAKlBA,EALkB,KAKTC,EALS,OAMG/N,oBAAU,GANb,mBAMlBgO,EANkB,KAMVC,EANU,OAOGjO,oBAAS,GAPZ,mBAOlBkO,EAPkB,KAOVC,EAPU,KASnBC,EAAgBpH,iBAAO,MACvBqH,EAAgBrH,iBAAO,MACvBsH,EAAgBtH,iBAAO,MACvBuH,EAAgBvH,iBAAO,MACvBwH,EAAgBxH,iBAAO,MACvByH,EAAgBzH,iBAAO,MAE7BnG,qBAAU,WACJd,EAAMwN,WAAWzD,OAAS,GAC5B0D,EAAczN,EAAMwN,cAErB,CAACxN,EAAMwN,aAEV1M,qBAAU,WACRgN,EAAQ9N,EAAM6N,MACdK,GAAU,SAACS,GAAD,OAAOA,EAAI,OACpB,CAAC3O,EAAM6N,OAEV/M,qBAAU,WACRkN,EAAWhO,EAAM+N,SACjBG,GAAU,SAACS,GAAD,OAAOA,EAAI,OACpB,CAAC3O,EAAM+N,UAEV,IAAMa,EAAY5N,uBAChB,SAACwM,GACC,IAAMrO,EAAOqO,EACbG,EAAaH,EAAWA,EAAWzD,OAAS,IAC5C6D,EAASJ,EAAWzD,OAAS,GAE7B,IAAM8E,EAAOvH,IAAU+G,EAAc1G,SAC/BmH,EAAOxH,IAAUgH,EAAc3G,SAC/BoH,EAAOzH,IAAUiH,EAAc5G,SAC/BqH,EAAO1H,IAAUkH,EAAc7G,SAC/BsH,EAAO3H,IAAUmH,EAAc9G,SAC/BuH,EAAO5H,IAAUoH,EAAc/G,SAG/BwH,EAAe,EAAfA,EAA+C,GAC/CvH,EAAQ,IAAMuH,EADW,GAEzBrH,EAAS,IAAMqH,EAFsB,GAIrCC,EAAU,IAAI/P,KAAKF,EAAK,GAAL,KAAkB,QAC3CiQ,EAAQC,QAAQD,EAAQE,UAAY,GACpC,IAAMC,EAAU,IAAIlQ,KAAKF,EAAKqO,EAAWzD,OAAS,GAAzB,KAAsC,QAC/DwF,EAAQF,QAAQE,EAAQD,UAAY,GAEpC,IAAME,EAAIlI,MAEPgD,OAAO,CAAC8E,EAASG,IACjBE,MAAM,CAACN,EAAavH,IAEjB8H,EAAapI,MAEhBgD,OAAO,CAAC,EAAGkD,EAAWzD,SACtB0F,MAAM,CAACN,EAAavH,IAGjB+H,EAAW,CAACd,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,GAC1C3P,EAAY,CAChB,iBACA,iBACA,gBACA,iBACA,iBACA,iBAEIqQ,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,WAEIC,EAAY,IAAIC,IAAI,CACxB,iBACA,iBACA,kBAGIC,EAAcxQ,EAAUuN,QAAO,SAACpB,EAAGsE,GAEvC,OADAtE,EAAEsE,GAAK1I,IAAOnI,GAAM,SAACM,GAAD,OAAQA,EAAEuQ,MACvBtE,IACN,IAEGuE,EAAU9O,OAAO+O,QAAQH,GAAa1L,KAAI,YAAmB,IAAD,mBAAhB8L,EAAgB,KAAVC,EAAU,KAE1DC,EAAe,SAACD,GAAD,OACnBrC,GAAW8B,EAAUS,IAAIH,GACrB7I,MAEGgD,OAAO,CAAC,EAAG,IAAM8F,IACjBG,OACHjJ,MAEGgD,OAAO,CAAC,EAAG,IAAM8F,IACjBG,QAET,OACIF,EADIxC,EAEFsC,EAAKK,MAAM,UACPT,EAAW,eACXA,EAAW,eAEJK,GACfX,MAAM,CAAC3H,EAAQqH,OAGbsB,EAAI,SAACC,EAAa9R,GAEtB,IAAM2M,EAAQ0E,EAAQS,GAChBC,EAAQpR,EAAUmR,GACxB,OAAOnF,EACLwC,GAAW8B,EAAUS,IAAIK,GAASjG,KAAKkG,IAAI,EAAGhS,EAAI+R,IAAU/R,EAAI+R,KAK9DE,EAAQlB,EAAStL,KAAI,SAAC5E,EAAGqK,GAC7B,OAAOrK,EACJ+I,OAAO,KACPA,OAAO,UACPX,KAAK,OAAQ+H,EAAO9F,IACpBjC,KAAK,SAAU+H,EAAO9F,IACtBjC,KAAK,IAAK,GACVA,KAAK,KAAM2H,EAAE,IAAInQ,KAAKF,EAAKqO,EAAWzD,OAAS,GAAzB,KAAsC,UAC5DlC,KAAK,KAAM4I,EAAE3G,EAAG3K,EAAKqO,EAAWzD,OAAS,QAG9C,SAAS+G,IACPnD,EAAaxO,EAAKqO,EAAWzD,OAAS,IACtC6D,EAASJ,EAAWzD,OAAS,GAC7BqE,GAAU,GACVyC,EAAMhP,SAAQ,SAACpC,EAAGqK,GAChBrK,EAAEoI,KACA,KACA2H,EAAE,IAAInQ,KAAKF,EAAKqO,EAAWzD,OAAS,GAAzB,KAAsC,UACjDlC,KAAK,KAAM4I,EAAE3G,EAAG3K,EAAKqO,EAAWzD,OAAS,QAI/C,SAASgH,IACP,IAAMC,EAAK1J,IAAS2J,MAAM,GACpBnH,EAAIY,KAAKwG,MAAMxB,EAAWyB,OAAOH,IACvC,GAAI,GAAKlH,GAAKA,EAAI0D,EAAWzD,OAAQ,CACnC,IAAMtK,EAAIN,EAAK2K,GACf6D,EAAalO,GACb2O,GAAU,GACVR,EAAS9D,GACT+G,EAAMhP,SAAQ,SAACuP,EAAGC,GAChBD,EAAEvJ,KAAK,KAAM2H,EAAE,IAAInQ,KAAKI,EAAC,KAAW,UAAUoI,KAAK,KAAM4I,EAAEY,EAAG5R,QAapEkQ,EAAS9N,SAAQ,SAACyP,EAAGxH,GAEnBwH,EAAE9I,OAAO,KACNX,KAAK,YAAa,eAAiBC,EAAS,KAC5CD,KAAK,QAAS,QACd4D,KAAKnE,IAAckI,IAGtB8B,EAAE9I,OAAO,KACNX,KAAK,YADR,oBACkCD,EADlC,KAC4C,EAD5C,MAEGC,KAAK,QAAS,QACd4D,KACCnE,IACa2I,EAAQnG,IAClByH,MAtBS,SAACC,GACjB,IAAMb,EAAQpR,EAAUiS,GACxB,OAAOzD,GAAW8B,EAAUS,IAAIK,GAC5BjG,KAAK+G,KAAK/G,KAAKgH,MAAMzB,EAAQuB,GAAUlH,SAAS,KAChD,EAkBSqH,CAAU7H,IAChB8H,YAAY,GACZC,WAAWvK,IAAU,QAI5BgK,EAAEvI,GAAG,YAAagI,GACfhI,GAAG,YAAagI,GAChBhI,GAAG,WAAY+H,GACf/H,GAAG,WAAY+H,GAGlB,IAAMgB,EAAOR,EACV7I,UAAU,QACVtJ,KAAKA,GACLwJ,QACAH,OAAO,UACPX,KAAK,OAAQ+H,EAAO9F,IACpBjC,KAAK,SAAU+H,EAAO9F,IACtBjC,KAAK,SAAU,WACfA,KAAK,MAAM,SAACpI,GACX,OAAO+P,EAAE,IAAInQ,KAAKI,EAAC,KAAW,YAE/BoI,KAAK,MAAM,SAACpI,GAAD,OAAOgR,EAAE3G,EAAGrK,MAGtBqK,EAAIY,KAAKC,MAAMgF,EAAS5F,OAAS,IACnCuH,EAAE9I,OAAO,QACNuJ,MAAM5S,GACN0I,KAAK,OAAQ,QACbA,KAAK,SAAU+H,EAAO9F,GAAK,MAC3BjC,KAAK,eAAgB,GACrBA,KAAK,SAAU,WACfA,KACC,IACAP,MAEGkI,GAAE,SAAC/P,GACF,OAAO+P,EAAE,IAAInQ,KAAKI,EAAC,KAAW,YAE/BgR,GAAE,SAAChR,GAAD,OAAOgR,EAAE3G,EAAGrK,MACduS,MAAM1K,MAEbwK,EAAKjK,KAAK,IAAK,KAEfyJ,EAAE7I,UAAU,aACTtJ,KAAKA,GACLwJ,QACAH,OAAO,QACPX,KAAK,MAAM,SAACpI,GACX,OAAO+P,EAAE,IAAInQ,KAAKI,EAAC,KAAW,YAE/BoI,KAAK,KAAMC,GACXD,KAAK,MAAM,SAACpI,GACX,OAAO+P,EAAE,IAAInQ,KAAKI,EAAC,KAAW,YAE/BoI,KAAK,MAAM,SAACpI,GAAD,OAAOgR,EAAE3G,EAAGrK,MACvBmD,MAAM,SAAUgN,EAAO9F,GAAK,MAC5BlH,MAAM,eAAgB,GACzBkP,EAAKjK,KAAK,IAAK,SAIrB,CAACkG,EAASF,IAGNoE,EAAgBjR,uBAAY,WAShC,IARA,IAAMkR,EAAS,CACb7D,EACAC,EACAC,EACAC,EACAC,EACAC,GAEO5E,EAAI,EAAGA,EAAIoI,EAAOnI,OAAQD,IACjCxC,IAAU4K,EAAOpI,GAAGnC,SAASc,UAAU,KAAKlB,WAE7C,IAEHzG,qBAAU,WACJmN,EAAS,GACXgE,MAED,CAAChE,EAAQgE,IAEZnR,qBAAU,WACJ0M,EAAWzD,OAAS,GACtB6E,EAAUpB,KAEX,CAACA,EAAYoB,IAEhB,IAAMuD,EAAgB,IAAI9S,KAC1B8S,EAAc9C,QAAQ8C,EAAc7C,UAAY,GAChD,IAAM8C,EAAW,IAAI/S,KAAKqO,EAAS,KAAW,QACxC2E,EACJD,EAASE,aAAeH,EAAcG,YACtCF,EAAS9C,YAAc6C,EAAc7C,UAEvC,OACE,yBACEnN,UAAU,6BACVS,MAAO,CAACsD,eAAgB,SAExB,yBACE/D,UAAU,aACVS,MAAO,CAACU,QAAwB,IAAftD,EAAMmQ,KAAa,OAAS,SAE7C,yBAAKhO,UAAU,cACb,yBAAKA,UAAU,SACb,wBAAIA,UAAS,UAAMgM,EAAmB,GAAV,UAA5B,aACA,wBAAIhM,UAAS,UAAKgM,EAAS,QAAU,KAClCkE,EAAW,UACL3E,EAAS,KADJ,cAERA,EAAS,MAEf,yBAAKvL,UAAU,gBACb,4BAAKuL,EAAS,gBACd,4BACGF,EAAWzD,OAAS,GAAe,IAAVxH,EACtBiL,EAAWjL,GAAX,eACEiL,EAAWjL,EAAQ,GAAnB,gBACF,EACE,KACCiL,EAAWjL,GAAX,eACCiL,EAAWjL,EAAQ,GAAnB,gBACFiL,EAAWjL,GAAX,eACAiL,EAAWjL,EAAQ,GAAnB,eACF,MAIV,yBACE2J,IAAKmC,EACLzG,MAAM,MACNE,OAAO,MACPkE,QAAQ,cACRC,oBAAoB,mBAIxB,yBAAK9J,UAAU,uBACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAS,UAAMgM,EAAmB,GAAV,UAA5B,aACA,wBAAIhM,UAAS,UAAKgM,EAAS,QAAU,KAClCkE,EAAW,UACL3E,EAAS,KADJ,cAERA,EAAS,MAEf,yBAAKvL,UAAU,gBACb,4BAAKuL,EAAS,gBACd,4BACGF,EAAWzD,OAAS,GAAe,IAAVxH,EACtBiL,EAAWjL,GAAX,eACEiL,EAAWjL,EAAQ,GAAnB,gBACF,EACE,KACCiL,EAAWjL,GAAX,eACCiL,EAAWjL,EAAQ,GAAnB,gBACFiL,EAAWjL,GAAX,eACAiL,EAAWjL,EAAQ,GAAnB,eACF,MAIV,yBACE2J,IAAKoC,EACL1G,MAAM,MACNE,OAAO,MACPkE,QAAQ,cACRC,oBAAoB,mBAIxB,yBAAK9J,UAAU,sBACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAS,UAAMgM,EAAmB,GAAV,UAA5B,YACA,wBAAIhM,UAAS,UAAKgM,EAAS,QAAU,KAClCkE,EAAW,UACL3E,EAAS,KADJ,cAERA,EAAS,MAEf,yBAAKvL,UAAU,gBACb,4BAAKuL,EAAS,eACd,4BACGF,EAAWzD,OAAS,GAAe,IAAVxH,EACtBiL,EAAWjL,GAAX,cACEiL,EAAWjL,EAAQ,GAAnB,eACF,EACE,KACCiL,EAAWjL,GAAX,cACCiL,EAAWjL,EAAQ,GAAnB,eACFiL,EAAWjL,GAAX,cACAiL,EAAWjL,EAAQ,GAAnB,cACF,MAIV,yBACE2J,IAAKqC,EACL3G,MAAM,MACNE,OAAO,MACPkE,QAAQ,cACRC,oBAAoB,oBAK1B,yBACE9J,UAAU,aACVS,MAAO,CAACU,QAAwB,IAAftD,EAAMmQ,KAAa,OAAS,SAE7C,yBAAKhO,UAAU,cACb,yBAAKA,UAAU,SACb,wBAAIA,UAAS,UAAMgM,EAAmB,GAAV,UAA5B,aACA,wBAAIhM,UAAS,UAAKgM,EAAS,QAAU,KAClCkE,EAAW,UACL3E,EAAS,KADJ,cAERA,EAAS,MAEf,yBAAKvL,UAAU,gBACb,4BAAKuL,EAAS,gBACd,4BACGF,EAAWzD,OAAS,GAAe,IAAVxH,EACtBiL,EAAWjL,GAAX,eACEiL,EAAWjL,EAAQ,GAAnB,gBACF,EACE,KACCiL,EAAWjL,GAAX,eACCiL,EAAWjL,EAAQ,GAAnB,gBACFiL,EAAWjL,GAAX,eACAiL,EAAWjL,EAAQ,GAAnB,eACF,MAIV,yBACE2J,IAAKsC,EACL5G,MAAM,MACNE,OAAO,MACPkE,QAAQ,cACRC,oBAAoB,mBAIxB,yBAAK9J,UAAU,uBACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAS,UAAMgM,EAAmB,GAAV,UAA5B,aACA,wBAAIhM,UAAS,UAAKgM,EAAS,QAAU,KAClCkE,EAAW,UACL3E,EAAS,KADJ,cAERA,EAAS,MAEf,yBAAKvL,UAAU,gBACb,4BAAKuL,EAAS,gBACd,4BACGF,EAAWzD,OAAS,GAAe,IAAVxH,EACtBiL,EAAWjL,GAAX,eACEiL,EAAWjL,EAAQ,GAAnB,gBACF,EACE,KACCiL,EAAWjL,GAAX,eACCiL,EAAWjL,EAAQ,GAAnB,gBACFiL,EAAWjL,GAAX,eACAiL,EAAWjL,EAAQ,GAAnB,eACF,MAIV,yBACE2J,IAAKuC,EACL7G,MAAM,MACNE,OAAO,MACPkE,QAAQ,cACRC,oBAAoB,mBAIxB,yBAAK9J,UAAU,sBACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAS,UAAMgM,EAAmB,GAAV,UAA5B,YACA,wBAAIhM,UAAS,UAAKgM,EAAS,QAAU,KAClCkE,EAAW,UACL3E,EAAS,KADJ,cAERA,EAAS,MAEf,yBAAKvL,UAAU,gBACb,4BAAKuL,EAAS,eACd,4BACGF,EAAWzD,OAAS,GAAe,IAAVxH,EACtBiL,EAAWjL,GAAX,cACEiL,EAAWjL,EAAQ,GAAnB,eACF,EACE,KACCiL,EAAWjL,GAAX,cACCiL,EAAWjL,EAAQ,GAAnB,eACFiL,EAAWjL,GAAX,cACAiL,EAAWjL,EAAQ,GAAnB,cACF,MAIV,yBACE2J,IAAKwC,EACL9G,MAAM,MACNE,OAAO,MACPkE,QAAQ,cACRC,oBAAoB,sBCpOjBsG,MA3Pf,SAAcvS,GAAQ,IAAD,EACSC,mBAAS,IADlB,mBACZ6E,EADY,KACJC,EADI,OAEuC9E,mBAAS,IAFhD,mBAEZsF,EAFY,KAEWiN,EAFX,OAIWvS,oBAAS,GAJpB,mBAIZwS,EAJY,KAIHC,EAJG,OAKmBzS,mBAAS,GAL5B,mBAKZ0S,EALY,KAKCC,EALD,OAMmB3S,mBAAS,IAN5B,mBAMC4S,GAND,aAOiB5S,mBAAS,IAP1B,mBAOZuN,EAPY,KAOAC,EAPA,OAQmBxN,mBAAS,IAR5B,mBAQC6S,GARD,aASyB7S,oBAAS,GATlC,mBASZ8S,EATY,KASIC,EATJ,OAU+B/S,oBAAS,GAVxC,mBAUZgT,EAVY,KAUOC,EAVP,OAW+BjT,wBAASiN,GAXxC,mBAWZf,EAXY,KAWOgH,EAXP,KAanBlP,QAAQC,IAAI,cAAcsJ,GAC1B1M,qBAAU,YACQ,IAAZ2R,GACFW,MAED,CAACX,IAEJ,IAAMW,EAAS,uCAAG,oCAAA1H,EAAA,+EAMJ2H,QAAQC,IAAI,CACpBC,IAAMC,IAAI,0CACVD,IAAMC,IAAI,yDACVD,IAAMC,IAAI,qDATE,mCAGZC,EAHY,KAIZC,EAJY,KAKZC,EALY,KAed5O,EAAU0O,EAAStU,KAAKyU,WACxBnG,EAAcvO,EAAYuU,EAAStU,KAAK0U,oBACxChB,EAAeY,EAAStU,KAAKyU,UAAU,GAAGhQ,iBAC1C4O,EAAyBkB,EAA0BvU,MACnD2T,EAAea,EAAkBxU,MAEjCuT,GAAW,GArBG,kDAuBdzO,QAAQC,IAAR,MAvBc,0DAAH,qDAqCf,OACE,kBAAC,IAAMhC,SAAP,KACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kBAAkBS,MAAO,CAACsD,eAAgB,OACvD,yBAAK/D,UAAU,cACb,yBAAKA,UAAU,UAC3B,4BAAKuC,EAAiBoP,WACR,wBAAIlR,MAAO,CAACE,WAAY,MAAxB,IAAgC4B,EAAiBqP,aAAjD,QAuBN,kBAAC,EAAD,CACEjP,OAAQA,EACRK,SAAS,EACTI,sBAAuBA,EACvBjD,iBA5Ce,SAACpC,EAAOqC,GAE1B4Q,EADAjT,GAAUqC,EACW,CAACrC,QAAOqC,SADS,OA4CnC+B,oBAzCkB,SAACH,EAAUjE,EAAOqC,GAEvC4Q,EADAjT,GAAUqC,GAAU4B,EACC,CAACA,WAAUjE,QAAOqC,SADY,UA4CpD,yBAAKJ,UAAU,cACZsQ,GACC,kBAAC,IAAMvQ,SAAP,KACE,kBAAC,EAAD,CACE4C,OAAQA,EACRS,sBAAuBA,EACvB4G,kBAAmBA,IAGrB,yBACEhK,UAAU,6BACVS,MAAO,CAACsD,eAAgB,SAExB,qDACA,yBAAK/D,UAAU,QACb,yBACEA,UAAS,cAAyB,IAAhBwQ,EAAoB,UAAY,IAClDjQ,QAAS,WACPkQ,EAAe,KAGjB,2CAEF,yBACEzQ,UAAS,cAAyB,IAAhBwQ,EAAoB,UAAY,IAClDjQ,QAAS,WACPkQ,EAAe,KAGjB,uCAIJ,yBAAKzQ,UAAU,eACb,8CACA,yBAAKA,UAAU,mBACb,2BAAO6R,QAAQ,mBAAf,WACA,2BACE7D,KAAK,WACL8D,QAASlB,EACT5Q,UAAU,SACV+R,aAAW,yCACXC,SAAU,SAACC,GACTpB,GAAmBD,OAIzB,yBACE5Q,UAAS,6BACS,IAAhBwQ,EAAoB,WAAa,KAGnC,2BAAOqB,QAAQ,sBAAf,eACA,2BACE7D,KAAK,WACL8D,QAAyB,IAAhBtB,GAAqBM,EAC9B9Q,UAAU,SACVkS,SAA0B,IAAhB1B,EACVwB,SAAU,SAACC,GACTlB,GAAsBD,SAOhC,kBAAC,EAAD,CACEzF,WAAYA,EACZ2C,KAAMwC,EACN9E,KAAMkF,EACNhF,QAASkF,S,2CC9KV,SAASqB,IACtB,IAAIC,EAD6B,EAMIC,IAAMvU,SAAS,IANnB,mBAM1BwU,EAN0B,KAMXC,EANW,KAO7BC,EAAa5Q,OAAOtD,aAAaC,QAAQ,YAE7CiU,EAAaA,EAAa/P,KAAKjB,MAAMgR,GAAcC,UAAUnQ,SAT5B,MAUe+P,IAAMvU,SAAS,IAV9B,mBAU1B4U,EAV0B,KAURC,EAVQ,OAWmBN,IAAMvU,SAAS,IAXlC,mBAW1B8U,EAX0B,KAWNC,EAXM,OAa2BR,IAAMvU,SAChE,IAd+B,mBAa1BgV,EAb0B,KAaFC,EAbE,KAiB3BC,EAAkBX,IAAMvN,OAAO,MACrCuN,IAAM1T,WAAU,WAIZyT,EADiB,UAAfI,EACU,iCACY,UAAfA,EACG,+BAEA,iCAGD,IAAIS,IAAS,CAACC,OAAQ,sBAAsBC,KACvD,oBAEFA,CAAKf,GACF/I,OAAO,CACN+J,WAAY,IACZC,KAAM,cAEPC,UACC,SAAcC,EAASC,GACrBD,EAAQrR,KAAI,SAACuR,GAAD,OACVlB,GAAY,SAACD,GAAD,4BAAuBA,GAAvB,CAAsCmB,EAAOC,eAE3DF,OAEF,SAAc1M,GACRA,GACFhF,QAAQ6R,MAAM,mBAAoB7M,QAQzC,IAEH,IAAM8M,EAAmC,UAAfpB,GAAyC,UAAfA,EAChDqB,EAAc,GAAD,OAAIrB,IACjBqB,EAAcC,GAElBhS,QAAQC,IAAI6R,GAEZ,IAAMG,EAAiB,CACrB,CACEnK,GAAI,EACJtI,MAAO,YACP8F,MAAO,WACP4M,MAAO,mBAET,CACEpK,GAAI,EACJtI,MAAO,uBACP8F,MAAO,eACP4M,MAAO,sBAET,CACEpK,GAAI,EACJtI,MAAO,8BACP8F,MAAO,eACP4M,MAAO,qBAET,CACEpK,GAAI,EACJtI,MAAO,qBACP8F,MAAO,UACP4M,MAAO,sBAET,CACEpK,GAAI,EACJtI,MAAO,kBACP8F,MAAO,iBACP4M,MAAO,qBAET,CACEpK,GAAI,EACJtI,MAAO,kCACP8F,MAAO,mBACP4M,MAAO,uBAET,CACEpK,GAAI,EACJtI,MAAO,iCACP8F,MAAO,WACP4M,MAAO,uBAET,CACEpK,GAAI,EACJtI,MAAO,eACP8F,MAAO,cACP4M,MAAO,wBA7GsB,EAiHe3B,IAAMvU,SAAS,IAjH9B,mBAiH1BmW,EAjH0B,KAiHRC,EAjHQ,OAkHa7B,IAAMvU,SAAS,IAlH5B,mBAkH1BqW,EAlH0B,KAkHTC,EAlHS,KA2I3BC,EAAoB,SAACC,GACzBF,EAAmBE,EAAKlN,OACxB,IAAImN,EAAsB7B,EAAiBrV,QAAO,SAACmX,GACjD,OAAOA,EAAQC,WAAaH,EAAKlN,SAEnCyL,EAAsB0B,GAnJN,SAACxK,GAAD,MAClBnI,OAAO8S,SAAS,CAACC,KAAM,EAAGC,IAAG,UAAE7K,EAAIvE,eAAN,aAAE,EAAaqP,UAAWC,SAAU,WAmJ/DC,CAAY/B,IAGd,OACE,yBAAKhT,UAAU,eACb,yBAAKS,MAAO,CAACgF,MAAO,QAASuP,aAAc,SACzC,kBAAC,IAAD,CACEC,aAAW,EACXjV,UAAU,iBACVkV,YAAa3S,EAAiB4S,eAC9BC,QAASxB,EACT5B,SAAU,SAAC5K,GAAD,OAxCO,SAACpF,GACxBkS,EAAoBlS,GACpBF,QAAQC,IAAIC,GACZ,IAAIuS,EAAsBjC,EAAcjV,QAAO,SAACmX,GAC9C,OAAOA,EAAQa,YAAR,OAAqBrT,QAArB,IAAqBA,OAArB,EAAqBA,EAAUoF,UAExCuL,EAAoB4B,GAEpB,IADA,IAAIe,EAAyB,GACpB3N,EAAI,EAAGA,EAAIoM,EAAenM,OAAQD,IAAK,CAE9C,IADA,IAAI4N,GAAc,EACTrG,EAAI,EAAGA,EAAIqF,EAAoB3M,OAAQsH,IAC9C,GAAI6E,EAAepM,GAAGP,QAAUmN,EAAoBrF,GAAGuF,SAAU,CAC/Dc,GAAc,EACd,MAGAA,GACFD,EAAuBE,KAAKzB,EAAepM,IAG/CoL,EAA0BuC,GAoBCG,CAAiBrO,OAIzC6M,EACC,yBAAKjU,UAAU,kBACZ8S,EAAuB5Q,KAAI,SAACwT,EAAetV,GAC1C,OACE,yBACET,IAAKS,EACLG,QAAS,kBAAM8T,EAAkBqB,IACjC1V,UAAU,iBAEV,yBAAK2V,IAAKD,EAAc1B,QACxB,4BAAK0B,EAAcpU,YAM7B,4BAAKiB,EAAiBqT,sBAGrBzB,GAAmBF,GAAoBrB,EACtC,wBAAI7I,IAAKiJ,EAAiBhT,UAAU,iBACjCmU,EADH,OACwBF,EAAiB7M,OAEvC,KAEJ,yBAAKpH,UAAU,cACZiU,GAAoBE,GAAmBvB,EACpCA,EAAmB1Q,KAAI,SAACsS,GACtB,OACE,yBAAKxU,UAAU,oBACb,4BAAKwU,EAAQqB,MACb,4BAAKtT,EAAiBgI,OAAtB,MAAiCiK,EAAQsB,QACzC,4BAAKvT,EAAiBwT,QAAtB,MAAkCvB,EAAQwB,SACzCxB,EAAQyB,SACP,gCAAM1T,EAAiB2T,eAAvB,MAA0C1B,EAAQyB,UAChD,KACHzB,EAAQ2B,YACP,oCACE,wCAAc3B,EAAQ2B,aACtB,uGAKA,SAIV,OC1IGC,MA3Ef,SAAgBvY,GAEd,IAFqB,ECHR,SAAyB8B,EAAK0W,GAAc,MAGjBvY,oBAAS,WAC7C,IAEE,IAAMwW,EAAO1S,OAAOtD,aAAaC,QAAQoB,GAEzC,OAAO2U,EAAO7R,KAAKjB,MAAM8S,GAAQ+B,EACjC,MAAO1C,GAGP,OADA7R,QAAQC,IAAI4R,GACL0C,MAZ4C,mBAGhDC,EAHgD,KAGnCC,EAHmC,KAiCvD,MAAO,CAACD,EAfS,SAAAlP,GACf,IAEE,IAAMoP,EACJpP,aAAiBqP,SAAWrP,EAAMkP,GAAelP,EAEnDmP,EAAeC,GAEf5U,OAAOtD,aAAawB,QAAQH,EAAK8C,KAAKiU,UAAUF,IAChD,MAAO7C,GAEP7R,QAAQC,IAAI4R,MDjBcgD,CAAgB,WAAY,MATvC,mBASJC,GATI,uDAiBrB,WAA2BxP,GAA3B,SAAAmC,EAAA,sEACQqN,EAAYxP,GADpB,4CAjBqB,sBAqBrB,MAAiC,aAA7BxF,OAAOiV,SAASC,SAEhB,yBACE9W,UAAU,SACVS,MAAO,CACLsD,eAAgB,OAChBgT,WAAY,yBAGd,yBACE/W,UAAU,gBACVgX,IAAI,yBACJrB,IAAI,YACJlV,MAAO,CACLsD,eAAgB,OAChBgT,WAAY,0BAIhB,yBAAK/W,UAAU,eACZnC,EAAMoZ,MAAM/U,KAAI,SAACgV,EAAMvP,GACtB,OACE,kBAAC,IAAD,CAAMwP,GAAID,EAAKE,SAAUzX,IAAKgI,GAC5B,0BA1CQxB,EA2CW+Q,EAAKE,SA3CVrT,EA2CoBmT,EAAKG,wBA3CL,CAC9CrX,UAAU,YAAD,OAAc4B,OAAOiV,SAASC,WAAa3Q,EAAO,UAAY,IACvE1F,MAAO,CACLsD,eAAe,GAAD,OAAKA,EAAL,QA0CDmT,EAAKI,cA7CD,IAACnR,EAAMpC,KAkDpB,kBAAC,IAAD,CACE/D,UAAU,iBACVkV,YAAa,kBACbE,QA5Ca,CACrB,CAAC,MAAS,UAAW,MAAS,MAC9B,CAAC,MAAS,uCAAU,MAAS,SAC7B,CAAC,MAAS,iCAAS,MAAS,UA0CpBpD,SACE,SAACsC,GAAD,OAzDS,2CAyDCiD,CAAWjD,EAAKlN,OAAOoQ,KAAK5V,OAAOiV,SAASY,cAQ5D,yBAAKzX,UAAU,kBAMZ,+BE8BI0X,MAxGf,SAAe7Z,GACb,OACD,yBAAKmC,UAAU,SAEV,yBAAKA,UAAU,gBAAgBS,MAAO,CAACsD,eAAgB,SACrD,6DACA,uBACE4T,KAAK,mBACL3Q,OAAO,SACP4Q,IAAI,uBAHN,iBASF,yBAAK5X,UAAU,gBAAgBS,MAAO,CAACsD,eAAgB,SACrD,6EACA,uBACE4T,KAAK,uCACL3Q,OAAO,SACP4Q,IAAI,uBAHN,yCAYF,yBAAK5X,UAAU,gBAAgBS,MAAO,CAACsD,eAAgB,SACrD,uBACE4T,KAAK,wEACL3Q,OAAO,SACP4Q,IAAI,sBACJnX,MAAO,CAACoX,cAAc,SAJxB,2DAUF,yBAAK7X,UAAU,gBAAgBS,MAAO,CAACsD,eAAgB,SACrD,oFACA,uBACE4T,KAAK,4BACL3Q,OAAO,SACP4Q,IAAI,uBAHN,8BAWF,yBAAK5X,UAAU,gBAAgBS,MAAO,CAACsD,eAAgB,SACrD,wDACA,uBACE4T,KAAK,kEACL3Q,OAAO,SACP4Q,IAAI,uBAHN,oEASF,yBAAK5X,UAAU,gBAAgBS,MAAO,CAACsD,eAAgB,SACrD,mCACA,uBACE4T,KAAK,qDACL3Q,OAAO,SACP4Q,IAAI,uBAHN,uDASF,yBAAK5X,UAAU,gBAAgBS,MAAO,CAACsD,eAAgB,SACrD,6FACA,uBACE4T,KAAK,qCACL3Q,OAAO,SACP4Q,IAAI,uBAHN,uCASF,yBAAK5X,UAAU,gBAAgBS,MAAO,CAACsD,eAAgB,SACrD,uDACA,uBACE4T,KAAK,sCACL3Q,OAAO,SACP4Q,IAAI,uBAHN,0CCjCOE,MAtDf,SAAaja,GAOXc,qBAAU,WACRiD,OAAO8S,SAAS,EAAG,KAClB,IAGH,IAAMqD,EAAM,CACV,CAACnO,GAAG,EAAEoO,SAAUzV,EAAiB0V,MAAOC,OAAO3V,EAAiB4V,OAChE,CAACvO,GAAG,EAAEoO,SAASzV,EAAiB6V,MAAMF,OAAO3V,EAAiB8V,OAC9D,CAACzO,GAAG,EAAEoO,SAASzV,EAAiB+V,MAAMJ,OAAO3V,EAAiBgW,OAC9D,CAAC3O,GAAG,EAAEoO,SAASzV,EAAiBiW,MAAMN,OAAO3V,EAAiBkW,OAC9D,CAAC7O,GAAG,EAAEoO,SAASzV,EAAiBmW,MAAOR,OAAO3V,EAAiBoW,QAejE,OACE,yBAAK3Y,UAAU,OACZ+X,EAAI7V,KAAI,SAAC6V,EAAK3X,GACb,OACE,yBACET,IAAKS,EACLJ,UAAU,eACVS,MAAO,CAACsD,eAAe,GAAD,OAAK,GAAc,GAAR3D,EAAX,OAEtB,wBAAIJ,UAAU,YAAY+X,EAAIC,UAC9B,wBACEhY,UAAU,SACV4Y,wBAAyB,CAACC,OAAQd,EAAIG,gB,+CC7CrC,SAAS/F,IACpB,OACI,yBAAKnS,UAAU,uBACX,gCAAMuC,EAAiBuW,cAAvB,KACA,4BAAQnD,IAAI,oHAAoHlQ,MAAM,MAAME,OAAO,OAAOoT,YAAY,IAAIC,aAAa,IAAIC,YAAY,KAAvM,kBCkBZ,IAAMC,EAAUC,EAAQ,IAAWC,qBAEnCtX,QAAQC,IAAI,oBAAoBQ,GAyHjB8W,MAxHf,WACE,IAAMpC,EAAQ,CACZ,CACEG,SAAU,IACV/D,KAAMjD,EACNkH,YAAa/U,EAAiB+W,KAC9BjC,wBAAyB,IAQ3B,CACED,SAAU,YACV/D,KAAMlB,EACNmF,YAAa/U,EAAiBgX,SAC9BlC,wBAAyB,IAE3B,CACED,SAAU,SACV/D,KAAMqE,EACNJ,YAAa/U,EAAiBiX,aAC9BnC,wBAAyB,IAE3B,CACED,SAAU,OACV/D,KAAMyE,EACNR,YAAa/U,EAAiBkX,MAC9BpC,wBAAyB,IAE3B,CACED,SAAU,cACV/D,KAAMqG,EACNpC,YAAa/U,EAAiBoX,WAC9BtC,wBAAyB,KAI7B,OACE,yBAAKrX,UAAU,OACb,kBAAC,IAAD,CAAQkZ,QAASA,GACf,kBAAC,IAAD,CACEU,OAAQ,gBAAE/C,EAAF,EAAEA,SAAF,OACN,yBAAK7W,UAAU,mBACb,kBAAC,EAAD,CAAQiX,MAAOA,IAEf,kBAAC,IAAD,CAAO4C,OAAK,EAAC1T,KAAK,IAAIyT,OAAQ,kBAAM,kBAAC,IAAD,CAAUzC,GAAG,SACjD,kBAAC,IAAD,CAAQN,SAAUA,GACfI,EAAM/U,KAAI,SAACgV,EAAMvP,GAChB,OACE,kBAAC,IAAD,CACEkS,OAAK,EACL1T,KAAM+Q,EAAKE,SACX0C,UAAW5C,EAAK7D,KAChB1T,IAAKgI,OAIX,kBAAC,IAAD,CAAUwP,GAAG,YAOvB,4BAAQnX,UAAU,WAAWS,MAAO,CAACsD,eAAgB,OAMnD,4BAAKxB,EAAiBwX,WACtB,uBACEpC,KAAK,0BACL3X,UAAU,gBACVgH,OAAO,SACP4Q,IAAI,uBAEJ,yBACEjC,IAAI,aACJqB,IAAI,gBACJvW,MAAO,CAACgF,MAAM,MAAME,OAAO,UAI/B,4BAAKpD,EAAiByX,WAAtB,KACA,uBACErC,KAAK,gCACL3X,UAAU,gBACVgH,OAAO,SACP4Q,IAAI,uBAGJ,iDAGF,4BAAKrV,EAAiBwF,KAAtB,KACA,uBACE4P,KAAK,mDACL3X,UAAU,gBACVgH,OAAO,SACP4Q,IAAI,uBAEJ,8BAAOrV,EAAiB0X,gBAE1B,uBACEtC,KAAK,0FACL3X,UAAU,gBACVgH,OAAO,SACP4Q,IAAI,uBAEJ,8BAAOrV,EAAiB2X,kBChIdC,QACW,cAA7BvY,OAAOiV,SAASuD,UAEe,UAA7BxY,OAAOiV,SAASuD,UAEhBxY,OAAOiV,SAASuD,SAAS/L,MACvB,2DCbNgM,IAAST,OAAO,kBAAC,EAAD,MAASU,SAASC,eAAe,SD8H3C,kBAAmB9H,WACrBA,UAAU+H,cAAcvV,MACrBuS,MAAK,SAACiD,GACLA,EAAaC,gBAEdC,OAAM,SAAChH,GACN7R,QAAQ6R,MAAMA,EAAMiH,c","file":"static/js/main.ae970e11.chunk.js","sourcesContent":["import moment from 'moment';\nimport {useLocation} from 'react-router-dom';\n\nconst months = {\n  '01': 'Jan',\n  '02': 'Feb',\n  '03': 'Mar',\n  '04': 'Apr',\n  '05': 'May',\n  '06': 'Jun',\n  '07': 'Jul',\n  '08': 'Aug',\n  '09': 'Sep',\n  '10': 'Oct',\n  '11': 'Nov',\n  '12': 'Dec',\n};\n\nconst stateCodes = {\n  AP: 'Andhra Pradesh',\n  AR: 'Arunachal Pradesh',\n  AS: 'Assam',\n  BR: 'Bihar',\n  CT: 'Chhattisgarh',\n  GA: 'Goa',\n  GJ: 'Gujarat',\n  HR: 'Haryana',\n  HP: 'Himachal Pradesh',\n  JH: 'Jharkhand',\n  KA: 'Karnataka',\n  KL: 'Kerala',\n  MP: 'Madhya Pradesh',\n  MH: 'Maharashtra',\n  MN: 'Manipur',\n  ML: 'Meghalaya',\n  MZ: 'Mizoram',\n  NL: 'Nagaland',\n  OR: 'Odisha',\n  PB: 'Punjab',\n  RJ: 'Rajasthan',\n  SK: 'Sikkim',\n  TN: 'Tamil Nadu',\n  TG: 'Telangana',\n  TR: 'Tripura',\n  UT: 'Uttarakhand',\n  UP: 'Uttar Pradesh',\n  WB: 'West Bengal',\n  AN: 'Andaman and Nicobar Islands',\n  CH: 'Chandigarh',\n  DN: 'Dadra and Nagar Haveli',\n  DD: 'Daman and Diu',\n  DL: 'Delhi',\n  JK: 'Jammu and Kashmir',\n  LA: 'Ladakh',\n  LD: 'Lakshadweep',\n  PY: 'Puducherry',\n};\n\nexport const getStateName = (code) => {\n  return stateCodes[code.toUpperCase()];\n};\n\nexport const formatDate = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const year = unformattedDate.slice(6, 10);\n  const time = unformattedDate.slice(11);\n  return `${year}-${month}-${day}T${time}+05:30`;\n};\n\nexport const formatDateAbsolute = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const time = unformattedDate.slice(11);\n  return `${day} ${months[month]}, ${time.slice(0, 5)} IST`;\n};\n\nexport const validateCTS = (data = []) => {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  const dataTypes = [\n    'dailyconfirmed',\n    'dailydeceased',\n    'dailyrecovered',\n    'totalconfirmed',\n    'totaldeceased',\n    'totalrecovered',\n  ];\n  return data\n    .filter((d) => dataTypes.every((dt) => d[dt]) && d.date)\n    .filter((d) => dataTypes.every((dt) => Number(d[dt]) >= 0))\n    .filter((d) => {\n      const year = today.getFullYear();\n      return new Date(d.date + year) < today;\n    });\n};\n\nexport const parseStateTimeseries = ({states_daily: data}) => {\n  const statewiseSeries = Object.keys(stateCodes).reduce((a, c) => {\n    a[c] = [];\n    return a;\n  }, {});\n\n  for (let i = 0; i < data.length; i += 3) {\n    const date = moment(data[i].date, 'DD-MMM-YY');\n    Object.entries(statewiseSeries).forEach(([k, v]) => {\n      const stateCode = k.toLowerCase();\n      const prev = v[v.length - 1] || {};\n      v.push({\n        dailyconfirmed: +data[i][stateCode] || 0,\n        dailyrecovered: +data[i + 1][stateCode] || 0,\n        dailydeceased: +data[i + 2][stateCode] || 0,\n        date: date.format('DD MMMM '),\n        totalconfirmed: +data[i][stateCode] + prev.dailyconfirmed || 0,\n        totaldeceased: +data[i + 1][stateCode] + prev.dailyrecovered || 0,\n        totalrecovered: +data[i + 2][stateCode] + prev.dailydeceased || 0,\n      });\n    });\n  }\n\n  return statewiseSeries;\n};\n\n// A custom hook that builds on useLocation to parse\n// the query string for you.\nexport function useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n","import React, {useState, useEffect, useCallback} from 'react';\nimport * as Icon from 'react-feather';\nimport {formatDate, formatDateAbsolute} from '../utils/common-functions';\nimport {formatDistance} from 'date-fns';\nimport {Link} from 'react-router-dom';\n\nfunction Row(props) {\n  const [state, setState] = useState(props.state);\n  const [districts, setDistricts] = useState(props.districts);\n  const [sortedDistricts, setSortedDistricts] = useState(props.districts);\n  const [sortData, setSortData] = useState({\n    sortColumn: localStorage.getItem('district.sortColumn')\n      ? localStorage.getItem('district.sortColumn')\n      : 'confirmed',\n    isAscending: localStorage.getItem('district.isAscending')\n      ? localStorage.getItem('district.isAscending') === 'true'\n      : false,\n  });\n\n  useEffect(() => {\n    setState(props.state);\n  }, [props.state]);\n\n  useEffect(() => {\n    setDistricts(props.districts);\n    setSortedDistricts(props.districts);\n  }, [props.districts]);\n\n  const handleReveal = () => {\n    props.handleReveal(props.state.state);\n  };\n\n  const sortDistricts = useCallback(\n    (aDistricts) => {\n      const sorted = {};\n      if (aDistricts) {\n        Object.keys(aDistricts)\n          .sort((district1, district2) => {\n            const sortColumn = sortData.sortColumn;\n            const value1 =\n              sortColumn === 'district'\n                ? district1\n                : parseInt(aDistricts[district1].confirmed);\n            const value2 =\n              sortColumn === 'district'\n                ? district2\n                : parseInt(aDistricts[district2].confirmed);\n            const comparisonValue =\n              value1 > value2\n                ? 1\n                : value1 === value2 && district1 > district2\n                ? 1\n                : -1;\n            return sortData.isAscending\n              ? comparisonValue\n              : comparisonValue * -1;\n          })\n          .forEach((key) => {\n            sorted[key] = aDistricts[key];\n          });\n        setSortedDistricts(sorted);\n      }\n    },\n    [sortData.isAscending, sortData.sortColumn]\n  );\n\n  const handleSort = (column) => {\n    const isAscending =\n      sortData.sortColumn === column\n        ? !sortData.isAscending\n        : sortData.sortColumn === 'district';\n    setSortData({\n      sortColumn: column,\n      isAscending: isAscending,\n    });\n    localStorage.setItem('district.sortColumn', column);\n    localStorage.setItem('district.isAscending', isAscending);\n  };\n\n  useEffect(() => {\n    sortDistricts(districts);\n  }, [districts, sortData, sortDistricts]);\n\n  return (\n    <React.Fragment>\n      <tr\n        className={props.total ? 'state is-total' : 'state'}\n        onMouseEnter={() => props.onHighlightState?.(state, props.index)}\n        onMouseLeave={() => props.onHighlightState?.()}\n        touchstart={() => props.onHighlightState?.(state, props.index)}\n        onClick={!props.total ? handleReveal : null}\n        style={{background: props.index % 2 === 0 ? '#f8f9fa' : ''}}\n      >\n        <td style={{fontWeight: 600}}>\n          <div className=\"table__title-wrapper\">\n            {/* <span\n              className={`dropdown ${\n                props.reveal ? 'rotateRightDown' : 'rotateDownRight'\n              }`}\n              style={{display: !props.total ? '' : 'none'}}\n              onClick={() => {\n                handleReveal();\n              }}\n            >\n              <Icon.ChevronDown />\n            </span> */}\n            {/* {state.state}\n            {state.state === 'West Bengal' && (\n              <Link to=\"/faq\">\n                <Icon.HelpCircle className=\"height-22\" />\n              </Link>\n            )} */}\n\n            Total\n          </div>\n        </td>\n        <td>\n          <span className=\"deltas\" style={{color: '#ff073a'}}>\n            {state.deltaconfirmed > 0 && <Icon.ArrowUp />}\n            {state.deltaconfirmed > 0 ? `${state.deltaconfirmed}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.confirmed) === 0 ? '-' : state.confirmed}\n          </span>\n        </td>\n        <td\n          style={{color: parseInt(state.active) === 0 ? '#B5B5B5' : 'inherit'}}\n        >\n          {/* <span className=\"deltas\" style={{color: '#007bff'}}>\n            {!state.delta.active==0 && <Icon.ArrowUp/>}\n            {state.delta.active>0 ? `${state.delta.active}` : ''}\n          </span>*/}\n          {parseInt(state.active) === 0 ? '-' : state.active}\n        </td>\n        <td\n          style={{\n            color: parseInt(state.recovered) === 0 ? '#B5B5B5' : 'inherit',\n          }}\n        >\n          <span className=\"deltas\" style={{color: '#28a745'}}>\n            {state.deltarecovered > 0 && <Icon.ArrowUp />}\n            {state.deltarecovered > 0 ? `${state.deltarecovered}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.recovered) === 0 ? '-' : state.recovered}\n          </span>\n        </td>\n        <td\n          style={{color: parseInt(state.deaths) === 0 ? '#B5B5B5' : 'inherit'}}\n        >\n          <span className=\"deltas\" style={{color: '#6c757d'}}>\n            {state.deltadeaths > 0 && <Icon.ArrowUp />}\n            {state.deltadeaths > 0 ? `${state.deltadeaths}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.deaths) === 0 ? '-' : state.deaths}\n          </span>\n        </td>\n      </tr>\n\n      <tr\n        className={'state-last-update'}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td colSpan={2}>\n          <div className=\"last-update\">\n            <h6>Last Updated&nbsp;</h6>\n            <h6\n              title={\n                isNaN(Date.parse(formatDate(props.state.lastupdatedtime)))\n                  ? ''\n                  : formatDateAbsolute(props.state.lastupdatedtime)\n              }\n            >\n              {isNaN(Date.parse(formatDate(props.state.lastupdatedtime)))\n                ? ''\n                : `${formatDistance(\n                    new Date(formatDate(props.state.lastupdatedtime)),\n                    new Date()\n                  )} Ago`}\n            </h6>\n          </div>\n        </td>\n      </tr>\n\n      <tr\n        className={`district-heading`}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td onClick={(e) => handleSort('district')}>\n          <div className=\"heading-content\">\n            <abbr title=\"District\">District</abbr>\n            <div\n              style={{\n                display:\n                  sortData.sortColumn === 'district' ? 'initial' : 'none',\n              }}\n            >\n              {sortData.isAscending ? (\n                <div className=\"arrow-up\" />\n              ) : (\n                <div className=\"arrow-down\" />\n              )}\n            </div>\n          </div>\n        </td>\n        <td onClick={(e) => handleSort('confirmed')}>\n          <div className=\"heading-content\">\n            <abbr\n              className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\n              title=\"Confirmed\"\n            >\n              {window.innerWidth <= 769\n                ? window.innerWidth <= 375\n                  ? 'C'\n                  : 'Cnfmd'\n                : 'Confirmed'}\n            </abbr>\n            <div\n              style={{\n                display:\n                  sortData.sortColumn === 'confirmed' ? 'initial' : 'none',\n              }}\n            >\n              {sortData.isAscending ? (\n                <div className=\"arrow-up\" />\n              ) : (\n                <div className=\"arrow-down\" />\n              )}\n            </div>\n          </div>\n        </td>\n      </tr>\n      {console.log('Sorted Districts',sortedDistricts)}\n      {sortedDistricts &&\n        Object.keys(sortedDistricts)\n          .filter((district) => district.toLowerCase() !== 'unknown')\n          .map((district, index) => {\n            if (district.toLowerCase() !== 'unknown' && district.toLowerCase() !== 'gujarat*') {\n              return (\n                <tr\n                  key={index}\n                  className={`district`}\n                  style={{\n                    display: props.reveal && !props.total ? '' : 'none',\n                    background: index % 2 === 0 ? '#f8f9fa' : '',\n                  }}\n                  onMouseEnter={() =>\n                    props.onHighlightDistrict?.(district, state, props.index)\n                  }\n                  onMouseLeave={() => props.onHighlightDistrict?.()}\n                  touchstart={() =>\n                    props.onHighlightDistrict?.(district, state, props.index)\n                  }\n                >\n                  <td style={{fontWeight: 600}}>{district}</td>\n                  <td>\n                    <span className=\"deltas\" style={{color: '#ff073a'}}>\n                      {sortedDistricts[district].delta.confirmed > 0 && (\n                        <Icon.ArrowUp />\n                      )}\n                      {sortedDistricts[district].delta.confirmed > 0\n                        ? `${sortedDistricts[district].delta.confirmed}`\n                        : ''}\n                    </span>\n                    <span className=\"table__count-text\">\n                      {sortedDistricts[district].confirmed}\n                    </span>\n                  </td>\n                </tr>\n              );\n            }\n            return null;\n          })}\n\n      {sortedDistricts?.Unknown && (\n        <tr\n          className={`district`}\n          style={{display: props.reveal && !props.total ? '' : 'none'}}\n        >\n          <td style={{fontWeight: 600}}>Unknown</td>\n          <td>\n            <span className=\"deltas\" style={{color: '#ff073a'}}>\n              {sortedDistricts['Unknown'].delta.confirmed > 0 && (\n                <Icon.ArrowUp />\n              )}\n              {sortedDistricts['Unknown'].delta.confirmed > 0\n                ? `${sortedDistricts['Unknown'].delta.confirmed}`\n                : ''}\n            </span>\n            <span className=\"table__count-text\">\n              {sortedDistricts['Unknown'].confirmed}\n            </span>\n          </td>\n        </tr>\n      )}\n\n      <tr\n        className={`spacer`}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td></td>\n        <td></td>\n        <td></td>\n      </tr>\n    </React.Fragment>\n  );\n}\n\nexport default Row;\n","import React from 'react';\nimport languageLabels from './languagelabels.json'\n\nlet language = window.localStorage.getItem('language');\n// Parse stored json or if none return initialValue\nlanguage = language ? JSON.parse(language) : 'en';\n\nexport const selectedLanguage = languageLabels[language];\n","import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport Row from './row';\nimport { selectedLanguage } from '../utils/setLanguage';\n\nfunction Table(props) {\n  const [states, setStates] = useState(props.states);\n\n  const [maharashtra,setMaharashtra] = useState(props.states)\n  const [revealedStates, setRevealedStates] = useState({});\n  const [districts, setDistricts] = useState({});\n  const [count, setCount] = useState(0);\n  const [sortData, setSortData] = useState({\n    sortColumn: localStorage.getItem('state.sortColumn')\n      ? localStorage.getItem('state.sortColumn')\n      : 'confirmed',\n    isAscending: localStorage.getItem('state.isAscending')\n      ? localStorage.getItem('state.isAscending') === 'true'\n      : false,\n  });\n\n  // useEffect(() => {\n  //   if (props.summary === true) {\n  //     setStates(props.states.filter(state => {\n  //       if(state)return state.statecode == 'MH'\n  //     }));\n  //   } \n  // }, [props.states]);\n\n  useEffect(() => {\n    if (props.summary === true) {\n      setStates(props.states.slice(0, 9));\n      const onlyMaharashtra = props.states.filter(state => {\n        return state && state.statecode == 'MH'\n      })\n      setMaharashtra(onlyMaharashtra)\n    } else {\n      setStates(props.states);\n      const onlyMaharashtra = props.states.filter(state => {\n        return state && state.statecode == 'MH'\n      })\n      setMaharashtra(onlyMaharashtra)\n    }\n  }, [props.states, props.summary]);\n\n  useEffect(() => {\n    if (props.states[0]) {\n      setRevealedStates(\n        {Maharashtra: true}\n      );\n    }\n  }, [props.states]);\n\n  // useEffect(() => {\n  //   if (states.length > 0) {\n  //     // slice to ignore the first item which is the total count\n  //     setCount(states.slice(1).filter((s) => s && s.confirmed > 0).length);\n  //   }\n  // }, [states]);\n\n  useEffect(() => {\n    setDistricts(props.stateDistrictWiseData);\n  }, [props.stateDistrictWiseData]);\n\n\n  const doSort = (e, props) => {\n    const totalRow = states.splice(0, 1);\n    states.sort((StateData1, StateData2) => {\n      const sortColumn = sortData.sortColumn;\n      let value1 = StateData1[sortColumn];\n      let value2 = StateData2[sortColumn];\n\n      if (sortColumn !== 'state') {\n        value1 = parseInt(StateData1[sortColumn]);\n        value2 = parseInt(StateData2[sortColumn]);\n      }\n\n      if (sortData.isAscending) {\n        return value1 > value2\n          ? 1\n          : value1 === value2 && StateData1['state'] > StateData2['state']\n          ? 1\n          : -1;\n      } else {\n        return value1 < value2\n          ? 1\n          : value1 === value2 && StateData1['state'] > StateData2['state']\n          ? 1\n          : -1;\n      }\n    });\n    states.unshift(totalRow[0]);\n  };\n\n  const handleSort = (e, props) => {\n    const currentsortColumn = e.currentTarget\n      .querySelector('abbr')\n      .getAttribute('title')\n      .toLowerCase();\n    const isAscending =\n      sortData.sortColumn === currentsortColumn\n        ? !sortData.isAscending\n        : sortData.sortColumn === 'state';\n    setSortData({\n      sortColumn: currentsortColumn,\n      isAscending: isAscending,\n    });\n    localStorage.setItem('state.sortColumn', currentsortColumn);\n    localStorage.setItem('state.isAscending', isAscending);\n  };\n\n  const handleReveal = (state) => {\n    setRevealedStates({\n      ...revealedStates,\n      [state]: !revealedStates[state],\n    });\n  };\n\n  doSort();\n\n  return (\n    <React.Fragment>\n      <h5 className=\"table-fineprint fadeInUp\" style={{animationDelay: '1.5s'}}>\n        {/* Compiled from State Govt. numbers <Link to=\"/faq\">Know More</Link> */}\n      </h5>\n      <table className=\"table fadeInUp\" style={{animationDelay: '1.8s'}}>\n        <thead>\n          <tr>\n            <th\n              className=\"state-heading\"\n              onClick={(e) => handleSort(e, props)}\n            >\n              <div className=\"heading-content\">\n                <abbr title=\"State\"> { selectedLanguage.MAHARASHTRA } </abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'state' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n            <th className=\"\" onClick={(e) => handleSort(e, props)}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\n                  title=\"Confirmed\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                      ? 'C'\n                      : 'Cnfmd'\n                    : 'Confirmed'}\n                </abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'confirmed' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n            <th className=\"\" onClick={(e) => handleSort(e, props)}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-blue' : ''}`}\n                  title=\"Active\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                      ? 'A'\n                      : 'Actv'\n                    : 'Active'}\n                </abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'active' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n            <th className=\"\" onClick={(e) => handleSort(e, props)}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-green' : ''}`}\n                  title=\"Recovered\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                      ? 'R'\n                      : 'Rcvrd'\n                    : 'Recovered'}\n                </abbr>\n                <div\n                  className={\n                    sortData.sortColumn === 'recovered' ? 'sort-black' : ''\n                  }\n                ></div>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'recovered' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n            <th className=\"\" onClick={(e) => handleSort(e, props)}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-gray' : ''}`}\n                  title=\"Deaths\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                      ? 'D'\n                      : 'Dcsd'\n                    : 'Deceased'}\n                </abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'deaths' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {states.map((state, index) => {\n            if (index !== 0 && state.confirmed > 0 && state.statecode === 'MH') {\n              return (\n                <Row\n                  key={index}\n                  index={index}\n                  state={state}\n                  total={false}\n                  reveal={revealedStates[state.state]}\n                  districts={\n                    state.state in districts\n                      ? districts[state.state].districtData\n                      : []\n                  }\n                  onHighlightState={props.onHighlightState}\n                  onHighlightDistrict={props.onHighlightDistrict}\n                  handleReveal={handleReveal}\n                />\n              );\n            }\n            return null;\n          })}\n        </tbody>\n\n        {/* <tbody>\n          {states.length > 1 && props.summary === false && (\n            <Row key={0} state={states[1]} total={true} />\n          )}\n        </tbody> */}\n      </table>\n      {/* <h5 className=\"table-fineprint fadeInUp\" style={{animationDelay: '1s'}}>\n        {count} States/UTS Affected\n      </h5> */}\n    </React.Fragment>\n  );\n}\n\nexport default Table;\n","import React, {useState, useEffect} from 'react';\n\nfunction Level(props) {\n  const [data, setData] = useState(props.data);\n  const [confirmed, setConfirmed] = useState(0);\n  const [active, setActive] = useState(0);\n  const [recoveries, setRecoveries] = useState(0);\n  const [deaths, setDeaths] = useState(0);\n  const [deltas, setDeltas] = useState(0);\n\n  useEffect(() => {\n    setData(props.data);\n  }, [props.data]);\n\n  useEffect(() => {\n    const parseData = () => {\n      let confirmed = 0;\n      let active = 0;\n      let recoveries = 0;\n      let deaths = 0;\n      let deltas = {};\n      data.forEach((state, index) => {\n        if (index !== 0) {\n          confirmed += parseInt(state.confirmed);\n          active += parseInt(state.active);\n          recoveries += parseInt(state.recovered);\n          deaths += parseInt(state.deaths);\n        } else {\n          deltas = {\n            confirmed: parseInt(state.deltaconfirmed),\n            deaths: parseInt(state.deltadeaths),\n            recovered: parseInt(state.deltarecovered),\n          };\n        }\n      });\n      setConfirmed(confirmed);\n      setActive(active);\n      setRecoveries(recoveries);\n      setDeaths(deaths);\n      setDeltas(deltas);\n    };\n    parseData();\n  }, [data]);\n\n  return (\n    <div className=\"Level\">\n      <div\n        className=\"level-item is-cherry fadeInUp\"\n        style={{animationDelay: '1s'}}\n      >\n        <h5>Confirmed</h5>\n        <h4>\n          [\n          {deltas\n            ? deltas.confirmed >= 0\n              ? '+' + deltas.confirmed\n              : '+0'\n            : ''}\n          ]\n        </h4>\n        <h1>{confirmed} </h1>\n      </div>\n\n      <div\n        className=\"level-item is-blue fadeInUp\"\n        style={{animationDelay: '1.1s'}}\n      >\n        <h5 className=\"heading\">Active</h5>\n        <h4>&nbsp;</h4>\n        {/* <h4>[{props.deltas ? props.deltas.confirmeddelta-(props.deltas.recovereddelta+props.deltas.deceaseddelta) >=0 ? '+'+(props.deltas.confirmeddelta-(props.deltas.recovereddelta+props.deltas.deceaseddelta)).toString() : '+0' : ''}]</h4>*/}\n        <h1 className=\"title has-text-info\">{active}</h1>\n      </div>\n\n      <div\n        className=\"level-item is-green fadeInUp\"\n        style={{animationDelay: '1.2s'}}\n      >\n        <h5 className=\"heading\">Recovered</h5>\n        <h4>\n          [\n          {deltas\n            ? deltas.recovered >= 0\n              ? '+' + deltas.recovered\n              : '+0'\n            : ''}\n          ]\n        </h4>\n        <h1 className=\"title has-text-success\">{recoveries} </h1>\n      </div>\n\n      <div\n        className=\"level-item is-gray fadeInUp\"\n        style={{animationDelay: '1.3s'}}\n      >\n        <h5 className=\"heading\">Deceased</h5>\n        <h4>\n          [{deltas ? (deltas.deaths >= 0 ? '+' + deltas.deaths : '+0') : ''}]\n        </h4>\n        <h1 className=\"title has-text-grey\">{deaths}</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default Level;\n","export const MAP_TYPES = {\n  COUNTRY: 'country',\n  STATE: 'state',\n};\n\nexport const MAPS_DIR = '/maps';\n\nexport const STATE_CODES = {\n  AP: 'Andhra Pradesh',\n  AR: 'Arunachal Pradesh',\n  AS: 'Assam',\n  BR: 'Bihar',\n  CT: 'Chhattisgarh',\n  GA: 'Goa',\n  GJ: 'Gujarat',\n  HR: 'Haryana',\n  HP: 'Himachal Pradesh',\n  JH: 'Jharkhand',\n  KA: 'Karnataka',\n  KL: 'Kerala',\n  MP: 'Madhya Pradesh',\n  MH: 'Maharashtra',\n  MN: 'Manipur',\n  ML: 'Meghalaya',\n  MZ: 'Mizoram',\n  NL: 'Nagaland',\n  OR: 'Odisha',\n  PB: 'Punjab',\n  RJ: 'Rajasthan',\n  SK: 'Sikkim',\n  TN: 'Tamil Nadu',\n  TG: 'Telangana',\n  TR: 'Tripura',\n  UT: 'Uttarakhand',\n  UP: 'Uttar Pradesh',\n  WB: 'West Bengal',\n  AN: 'Andaman and Nicobar Islands',\n  CH: 'Chandigarh',\n  DN: 'Dadra and Nagar Haveli',\n  DD: 'Daman and Diu',\n  DL: 'Delhi',\n  JK: 'Jammu and Kashmir',\n  LA: 'Ladakh',\n  LD: 'Lakshadweep',\n  PY: 'Puducherry',\n};","import React, {useCallback, useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport {legendColor} from 'd3-svg-legend';\nimport * as topojson from 'topojson';\nimport {MAP_TYPES} from '../constants';\n\nconst propertyFieldMap = {\n  country: 'st_nm',\n  state: 'district',\n};\n\nfunction ChoroplethMap({\n  statistic,\n  mapData,\n  setHoveredRegion,\n  mapMeta,\n  changeMap,\n  selectedRegion,\n}) {\n  const choroplethMap = useRef(null);\n  const [svgRenderCount, setSvgRenderCount] = useState(0);\n\n  const ready = useCallback(\n    (geoData) => {\n      d3.selectAll('svg#chart > *').remove();\n      const propertyField = propertyFieldMap[mapMeta.mapType];\n      const maxInterpolation = 0.8;\n      const svg = d3.select(choroplethMap.current);\n      const width = +svg.attr('width');\n      const height = +svg.attr('height');\n\n      const handleMouseover = (name) => {\n        try {\n          setHoveredRegion(name, mapMeta);\n        } catch (err) {\n          console.log('err', err);\n        }\n      };\n\n      const topology = topojson.feature(\n        geoData,\n        geoData.objects[mapMeta.graphObjectName]\n      );\n\n      const projection = d3.geoMercator();\n\n      if (mapMeta.mapType === MAP_TYPES.COUNTRY)\n        projection.fitSize([width, height], topology);\n      else\n        projection.fitExtent(\n          [\n            [90, 20],\n            [width, height],\n          ],\n          topology\n        );\n\n      const path = d3.geoPath(projection);\n\n      let onceTouchedRegion = null;\n\n      svg\n        .append('g')\n        .attr('class', 'states')\n        .selectAll('path')\n        .data(topology.features)\n        .enter()\n        .append('path')\n        .attr('class', 'path-region')\n        .attr('fill', function (d) {\n          const n = parseInt(mapData[d.properties[propertyField]]) || 0;\n          const color =\n            n === 0\n              ? '#ffffff'\n              : d3.interpolateReds(\n                  (maxInterpolation * n) / (statistic.maxConfirmed || 0.001)\n                );\n          return color;\n        })\n        .attr('d', path)\n        .attr('pointer-events', 'all')\n        .on('mouseover', (d) => {\n          handleMouseover(d.properties[propertyField]);\n          const target = d3.event.target;\n          d3.select(target.parentNode.appendChild(target)).attr(\n            'class',\n            'map-hover'\n          );\n        })\n        .on('mouseleave', (d) => {\n          const target = d3.event.target;\n          d3.select(target).attr('class', 'path-region map-default');\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n        })\n        .on('touchstart', (d) => {\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n          else onceTouchedRegion = d;\n        })\n        .on('click', (d) => {\n          if (onceTouchedRegion) {\n            return;\n          }\n          if (mapMeta.mapType === MAP_TYPES.STATE) {\n            return;\n          }\n          changeMap(d.properties[propertyField], mapMeta.mapType);\n        })\n        .style('cursor', 'pointer')\n        .append('title')\n        .text(function (d) {\n          const value = mapData[d.properties[propertyField]] || 0;\n          return (\n            Number(\n              parseFloat(100 * (value / (statistic.total || 0.001))).toFixed(2)\n            ).toString() +\n            '% from ' +\n            toTitleCase(d.properties[propertyField])\n          );\n        });\n\n      svg\n        .append('path')\n        .attr('stroke', '#ff073a20')\n        .attr('fill', 'none')\n        .attr('stroke-width', 2)\n        .attr(\n          'd',\n          path(topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectName]))\n        );\n    },\n    [\n      mapData,\n      mapMeta,\n      statistic.total,\n      statistic.maxConfirmed,\n      changeMap,\n      setHoveredRegion,\n    ]\n  );\n\n  const toTitleCase = (str) => {\n    str = str.toLowerCase().split(' ');\n    for (let i = 0; i < str.length; i++) {\n      str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\n    }\n    return str.join(' ');\n  };\n\n  const renderData = useCallback(() => {\n    const svg = d3.select(choroplethMap.current);\n\n    // Colorbar\n    const maxInterpolation = 0.8;\n    const color = d3\n      .scaleSequential(d3.interpolateReds)\n      .domain([0, statistic.maxConfirmed / maxInterpolation || 10]);\n\n    let cells = null;\n    let label = null;\n\n    label = ({i, genLength, generatedLabels, labelDelimiter}) => {\n      if (i === genLength - 1) {\n        const n = Math.floor(generatedLabels[i]);\n        return `${n}+`;\n      } else {\n        const n1 = 1 + Math.floor(generatedLabels[i]);\n        const n2 = Math.floor(generatedLabels[i + 1]);\n        return `${n1} - ${n2}`;\n      }\n    };\n\n    const numCells = 6;\n    const delta = Math.floor(\n      (statistic.maxConfirmed < numCells ? numCells : statistic.maxConfirmed) /\n        (numCells - 1)\n    );\n\n    cells = Array.from(Array(numCells).keys()).map((i) => i * delta);\n\n    svg\n      .append('g')\n      .attr('class', 'legendLinear')\n      .attr('transform', 'translate(1, 335)');\n\n    const legendLinear = legendColor()\n      .shapeWidth(36)\n      .shapeHeight(10)\n      .cells(cells)\n      .titleWidth(3)\n      .labels(label)\n      .title('Confirmed Cases')\n      .orient('vertical')\n      .scale(color);\n\n    svg\n      .select('.legendLinear')\n      .call(legendLinear)\n      .selectAll('text')\n      .style('font-size', '10px');\n  }, [statistic.maxConfirmed]);\n\n  useEffect(() => {\n    (async () => {\n      const data = await d3.json(mapMeta.geoDataFile);\n      if (statistic && choroplethMap.current) {\n        ready(data);\n        renderData();\n        setSvgRenderCount((prevCount) => prevCount + 1);\n      }\n    })();\n  }, [mapMeta.geoDataFile, statistic, renderData, ready]);\n\n  const highlightRegionInMap = (name) => {\n    const paths = d3.selectAll('.path-region');\n    paths.classed('map-hover', (d, i, nodes) => {\n      const propertyField =\n        'district' in d.properties\n          ? propertyFieldMap['state']\n          : propertyFieldMap['country'];\n      if (name === d.properties[propertyField]) {\n        nodes[i].parentNode.appendChild(nodes[i]);\n        return true;\n      }\n      return false;\n    });\n  };\n\n  useEffect(() => {\n    highlightRegionInMap(selectedRegion);\n  }, [svgRenderCount, selectedRegion]);\n\n  return (\n    <div className=\"svg-parent fadeInUp\" style={{animationDelay: '2.5s'}}>\n      <svg\n        id=\"chart\"\n        width=\"480\"\n        height=\"450\"\n        viewBox=\"0 0 480 450\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        ref={choroplethMap}\n      ></svg>\n    </div>\n  );\n}\n\nexport default ChoroplethMap;\n","import React, {useState, useEffect, useMemo, useCallback} from 'react';\nimport ChoroplethMap from './choropleth';\nimport {MAP_TYPES, MAPS_DIR} from '../constants';\nimport {formatDate, formatDateAbsolute} from '../utils/common-functions';\nimport {formatDistance} from 'date-fns';\nimport { selectedLanguage } from '../utils/setLanguage';\n\nconst mapMeta = {\n  Maharashtra: {\n    name: 'Maharashtra' ,\n    geoDataFile: `${MAPS_DIR}/maharashtra.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'maharashtra_district',\n  }\n};\n\nexport default function ({states, stateDistrictWiseData, regionHighlighted}) {\n  const [selectedRegion, setSelectedRegion] = useState({});\n  const [currentHoveredRegion, setCurrentHoveredRegion] = useState({});\n  const [currentMap, setCurrentMap] = useState(mapMeta.Maharashtra);\n\n  useEffect(() => {\n    console.log('States in Map',states)\n    const onlyMH = states.filter(state => {\n      return state.statecode === 'MH'\n    })\n    const region = getRegionFromState(onlyMH[0]);\n\n    console.log(region)\n    setCurrentHoveredRegion(region);\n  }, [states]);\n\n  if (!currentHoveredRegion) {\n    return null;\n  }\n\n  const [statistic, currentMapData] = useMemo(() => {\n    const statistic = {total: 0, maxConfirmed: 0};\n    let currentMapData = {};\n\n    if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n      currentMapData = states.reduce((acc, state) => {\n        if (state.state === 'Total') {\n          return acc;\n        }\n        const confirmed = parseInt(state.confirmed);\n        statistic.total += confirmed;\n        if (confirmed > statistic.maxConfirmed) {\n          statistic.maxConfirmed = confirmed;\n        }\n\n        acc[state.state] = state.confirmed;\n        return acc;\n      }, {});\n    } else if (currentMap.mapType === MAP_TYPES.STATE) {\n      const districtWiseData = (\n        stateDistrictWiseData[currentMap.name] || {districtData: {}}\n      ).districtData;\n      currentMapData = Object.keys(districtWiseData).reduce((acc, district) => {\n        const confirmed = parseInt(districtWiseData[district].confirmed);\n        statistic.total += confirmed;\n        if (confirmed > statistic.maxConfirmed) {\n          statistic.maxConfirmed = confirmed;\n        }\n        acc[district] = districtWiseData[district].confirmed;\n        return acc;\n      }, {});\n    }\n    return [statistic, currentMapData];\n  }, [currentMap, states, stateDistrictWiseData]);\n\n  const setHoveredRegion = useCallback(\n    (name, currentMap) => {\n      if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n        setCurrentHoveredRegion(\n          getRegionFromState(states.filter((state) => name === state.state)[0])\n        );\n      } else if (currentMap.mapType === MAP_TYPES.STATE) {\n        const state = stateDistrictWiseData[currentMap.name] || {\n          districtData: {},\n        };\n        let districtData = state.districtData[name];\n        if (!districtData) {\n          districtData = {\n            confirmed: 0,\n            active: 0,\n            deaths: 0,\n            recovered: 0,\n          };\n        }\n        setCurrentHoveredRegion(getRegionFromDistrict(districtData, name));\n      }\n    },\n    [stateDistrictWiseData, states]\n  );\n\n  useEffect(() => {\n    if (regionHighlighted === undefined) {\n      return;\n    } else if (regionHighlighted === null) {\n      setSelectedRegion(null);\n      return;\n    }\n    const isState = !('district' in regionHighlighted);\n    if (isState) {\n      const newMap = mapMeta['Maharashtra'];\n      setCurrentMap(newMap);\n      const region = getRegionFromState(regionHighlighted.state);\n      setCurrentHoveredRegion(region);\n      setSelectedRegion(region.name);\n    } else {\n      const newMap = mapMeta[regionHighlighted.state.state];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n      setHoveredRegion(regionHighlighted.district, newMap);\n      setSelectedRegion(regionHighlighted.district);\n    }\n  }, [regionHighlighted, currentMap.mapType, setHoveredRegion]);\n\n  const getRegionFromDistrict = (districtData, name) => {\n    if (!districtData) {\n      return;\n    }\n    const region = {...districtData};\n    if (!region.name) {\n      region.name = name;\n    }\n    return region;\n  };\n\n  const getRegionFromState = (state) => {\n    if (!state) {\n      return;\n    }\n    const region = {...state};\n    if (!region.name) {\n      region.name = region.state;\n    }\n    return region;\n  };\n\n  const switchMapToState = useCallback(\n    (name) => {\n      const newMap = mapMeta[name];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n       if (newMap.mapType === MAP_TYPES.STATE) {\n        const districtData = (stateDistrictWiseData[name] || {districtData: {}})\n          .districtData;\n        const topDistrict = Object.keys(districtData)\n          .filter((name) => name !== 'Unknown')\n          .sort((a, b) => {\n            return districtData[b].confirmed - districtData[a].confirmed;\n          })[0];\n        setHoveredRegion(topDistrict, newMap);\n      }\n    },\n    [setHoveredRegion, stateDistrictWiseData, states]\n  );\n  const {name, lastupdatedtime} = currentHoveredRegion;\n\n  return (\n    <div className=\"MapExplorer fadeInUp\" style={{animationDelay: '1.5s'}}>\n      <div className=\"header\">\n        <h1>{currentMap.name}</h1>\n        <h6>\n          {window.innerWidth <= 769 ? 'Tap' : 'Hover'} over a{' '}\n          {currentMap.mapType === MAP_TYPES.COUNTRY ? 'state/ut' : 'district'}{' '}\n          for more details\n        </h6>\n      </div>\n\n      <div className=\"map-stats\">\n        <div className=\"stats fadeInUp\" style={{animationDelay: '2s'}}>\n          <h5>Confirmed</h5>\n          <div className=\"stats-bottom\">\n            <h1>{currentHoveredRegion.confirmed}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"stats is-blue fadeInUp\"\n          style={{animationDelay: '2.1s'}}\n        >\n          <h5>Active</h5>\n          <div className=\"stats-bottom\">\n            <h1>{currentHoveredRegion.active || ''}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"stats is-green fadeInUp\"\n          style={{animationDelay: '2.2s'}}\n        >\n          <h5>Recovered</h5>\n          <div className=\"stats-bottom\">\n            <h1>{currentHoveredRegion.recovered || ''}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"stats is-gray fadeInUp\"\n          style={{animationDelay: '2.3s'}}\n        >\n          <h5>Deceased</h5>\n          <div className=\"stats-bottom\">\n            <h1>{currentHoveredRegion.deaths || ''}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"meta fadeInUp\" style={{animationDelay: '2.4s'}}>\n        <h2>{name}</h2>\n        {lastupdatedtime && (\n          <div\n            className={`last-update ${\n              currentMap.mapType === MAP_TYPES.STATE\n                ? 'district-last-update'\n                : 'state-last-update'\n            }`}\n          >\n            <h6>Last Updated</h6>\n            <h3\n              title={\n                isNaN(Date.parse(formatDate(lastupdatedtime)))\n                  ? ''\n                  : formatDateAbsolute(lastupdatedtime)\n              }\n            >\n              {isNaN(Date.parse(formatDate(lastupdatedtime)))\n                ? ''\n                : formatDistance(\n                    new Date(formatDate(lastupdatedtime)),\n                    new Date()\n                  ) + ' Ago'}\n            </h3>\n          </div>\n        )}\n\n        {currentMap.mapType === MAP_TYPES.STATE &&\n        currentMapData.Unknown > 0 ? (\n          <h4 className=\"unknown\">\n            Districts unknown for {currentMapData.Unknown} people\n          </h4>\n        ) : null}\n\n        {/* {currentMap.mapType === MAP_TYPES.STATE ? (\n          <div\n            className=\"button back-button\"\n            onClick={() => switchMapToState('India')}\n          >\n            Back\n          </div>\n        ) : null} */}\n      </div>\n\n      <ChoroplethMap\n        statistic={statistic}\n        mapMeta={currentMap}\n        mapData={currentMapData}\n        setHoveredRegion={setHoveredRegion}\n        changeMap={switchMapToState}\n        selectedRegion={selectedRegion}\n      />\n    </div>\n  );\n}\n","import React, {useState, useEffect, useRef, useCallback} from 'react';\nimport * as d3 from 'd3';\n\nfunction TimeSeries(props) {\n  const [timeseries, setTimeseries] = useState([]);\n  const [datapoint, setDatapoint] = useState({});\n  const [index, setIndex] = useState(10);\n  const [mode, setMode] = useState(props.mode);\n  const [logMode, setLogMode] = useState(props.logMode);\n  const [update, setUpdate] = useState(-1);\n  const [moving, setMoving] = useState(false);\n\n  const graphElement1 = useRef(null);\n  const graphElement2 = useRef(null);\n  const graphElement3 = useRef(null);\n  const graphElement4 = useRef(null);\n  const graphElement5 = useRef(null);\n  const graphElement6 = useRef(null);\n\n  useEffect(() => {\n    if (props.timeseries.length > 1) {\n      setTimeseries(props.timeseries);\n    }\n  }, [props.timeseries]);\n\n  useEffect(() => {\n    setMode(props.mode);\n    setUpdate((u) => u + 1);\n  }, [props.mode]);\n\n  useEffect(() => {\n    setLogMode(props.logMode);\n    setUpdate((u) => u + 1);\n  }, [props.logMode]);\n\n  const graphData = useCallback(\n    (timeseries) => {\n      const data = timeseries;\n      setDatapoint(timeseries[timeseries.length - 1]);\n      setIndex(timeseries.length - 1);\n\n      const svg1 = d3.select(graphElement1.current);\n      const svg2 = d3.select(graphElement2.current);\n      const svg3 = d3.select(graphElement3.current);\n      const svg4 = d3.select(graphElement4.current);\n      const svg5 = d3.select(graphElement5.current);\n      const svg6 = d3.select(graphElement6.current);\n\n      // Margins\n      const margin = {top: 0, right: 25, bottom: 60, left: 20};\n      const width = 650 - margin.left - margin.right;\n      const height = 200 - margin.top - margin.bottom;\n\n      const dateMin = new Date(data[0]['date'] + '2020');\n      dateMin.setDate(dateMin.getDate() - 1);\n      const dateMax = new Date(data[timeseries.length - 1]['date'] + '2020');\n      dateMax.setDate(dateMax.getDate() + 1);\n\n      const x = d3\n        .scaleTime()\n        .domain([dateMin, dateMax])\n        .range([margin.left, width]);\n\n      const indexScale = d3\n        .scaleLinear()\n        .domain([0, timeseries.length])\n        .range([margin.left, width]);\n\n      // Arrays of objects\n      const svgArray = [svg1, svg2, svg3, svg4, svg5, svg6];\n      const dataTypes = [\n        'totalconfirmed',\n        'totalrecovered',\n        'totaldeceased',\n        'dailyconfirmed',\n        'dailyrecovered',\n        'dailydeceased',\n      ];\n      const colors = [\n        '#ff073a',\n        '#28a745',\n        '#6c757d',\n        '#ff073a',\n        '#28a745',\n        '#6c757d',\n      ];\n      const logCharts = new Set([\n        'totalconfirmed',\n        'totalrecovered',\n        'totaldeceased',\n      ]);\n\n      const dTypeMaxMap = dataTypes.reduce((a, c) => {\n        a[c] = d3.max(data, (d) => +d[c]);\n        return a;\n      }, {});\n\n      const yScales = Object.entries(dTypeMaxMap).map(([type, maxY]) => {\n        // apply mode, logMode, etc -- determine scales once and for all\n        const applyLogMode = (maxY) =>\n          logMode && logCharts.has(type)\n            ? d3\n                .scaleLog()\n                .domain([1, 1.1 * maxY])\n                .nice()\n            : d3\n                .scaleLinear()\n                .domain([0, 1.1 * maxY])\n                .nice();\n\n        return (mode\n          ? applyLogMode(\n              type.match('^total')\n                ? dTypeMaxMap['totalconfirmed']\n                : dTypeMaxMap['dailyconfirmed']\n            )\n          : applyLogMode(maxY)\n        ).range([height, margin.top]);\n      });\n\n      const y = (dataTypeIdx, day) => {\n        // Scaling mode filters\n        const scale = yScales[dataTypeIdx];\n        const dType = dataTypes[dataTypeIdx];\n        return scale(\n          logMode && logCharts.has(dType) ? Math.max(1, day[dType]) : day[dType]\n        ); // max(1,y) for logmode\n      };\n\n      /* Focus dots */\n      const focus = svgArray.map((d, i) => {\n        return d\n          .append('g')\n          .append('circle')\n          .attr('fill', colors[i])\n          .attr('stroke', colors[i])\n          .attr('r', 5)\n          .attr('cx', x(new Date(data[timeseries.length - 1]['date'] + '2020')))\n          .attr('cy', y(i, data[timeseries.length - 1]));\n      });\n\n      function mouseout() {\n        setDatapoint(data[timeseries.length - 1]);\n        setIndex(timeseries.length - 1);\n        setMoving(false);\n        focus.forEach((d, i) => {\n          d.attr(\n            'cx',\n            x(new Date(data[timeseries.length - 1]['date'] + '2020'))\n          ).attr('cy', y(i, data[timeseries.length - 1]));\n        });\n      }\n\n      function mousemove() {\n        const xm = d3.mouse(this)[0];\n        const i = Math.round(indexScale.invert(xm));\n        if (0 <= i && i < timeseries.length) {\n          const d = data[i];\n          setDatapoint(d);\n          setMoving(true);\n          setIndex(i);\n          focus.forEach((f, j) => {\n            f.attr('cx', x(new Date(d['date'] + '2020'))).attr('cy', y(j, d));\n          });\n        }\n      }\n\n      const tickCount = (scaleIdx) => {\n        const dType = dataTypes[scaleIdx];\n        return logMode && logCharts.has(dType)\n          ? Math.ceil(Math.log10(yScales[scaleIdx].domain()[1]))\n          : 5;\n      };\n\n      /* Begin drawing charts */\n      svgArray.forEach((s, i) => {\n        /* X axis */\n        s.append('g')\n          .attr('transform', 'translate(0,' + height + ')')\n          .attr('class', 'axis')\n          .call(d3.axisBottom(x));\n\n        /* Y axis */\n        s.append('g')\n          .attr('transform', `translate(${width}, ${0})`)\n          .attr('class', 'axis')\n          .call(\n            d3\n              .axisRight(yScales[i])\n              .ticks(tickCount(i))\n              .tickPadding(5)\n              .tickFormat(d3.format('~s'))\n          );\n\n        /* Focus dots */\n        s.on('mousemove', mousemove)\n          .on('touchmove', mousemove)\n          .on('mouseout', mouseout)\n          .on('touchend', mouseout);\n\n        /* Path dots */\n        const dots = s\n          .selectAll('.dot')\n          .data(data)\n          .enter()\n          .append('circle')\n          .attr('fill', colors[i])\n          .attr('stroke', colors[i])\n          .attr('cursor', 'pointer')\n          .attr('cx', (d) => {\n            return x(new Date(d['date'] + '2020'));\n          })\n          .attr('cy', (d) => y(i, d));\n\n        /* Paths */\n        if (i < Math.floor(svgArray.length / 2)) {\n          s.append('path')\n            .datum(data)\n            .attr('fill', 'none')\n            .attr('stroke', colors[i] + '99')\n            .attr('stroke-width', 5)\n            .attr('cursor', 'pointer')\n            .attr(\n              'd',\n              d3\n                .line()\n                .x((d) => {\n                  return x(new Date(d['date'] + '2020'));\n                })\n                .y((d) => y(i, d))\n                .curve(d3.curveCardinal)\n            );\n          dots.attr('r', 3);\n        } else {\n          s.selectAll('stem-line')\n            .data(data)\n            .enter()\n            .append('line')\n            .attr('x1', (d) => {\n              return x(new Date(d['date'] + '2020'));\n            })\n            .attr('y1', height)\n            .attr('x2', (d) => {\n              return x(new Date(d['date'] + '2020'));\n            })\n            .attr('y2', (d) => y(i, d))\n            .style('stroke', colors[i] + '99')\n            .style('stroke-width', 5);\n          dots.attr('r', 3);\n        }\n      });\n    },\n    [logMode, mode]\n  );\n\n  const refreshGraphs = useCallback(() => {\n    const graphs = [\n      graphElement1,\n      graphElement2,\n      graphElement3,\n      graphElement4,\n      graphElement5,\n      graphElement6,\n    ];\n    for (let i = 0; i < graphs.length; i++) {\n      d3.select(graphs[i].current).selectAll('*').remove();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (update > 0) {\n      refreshGraphs();\n    }\n  }, [update, refreshGraphs]);\n\n  useEffect(() => {\n    if (timeseries.length > 1) {\n      graphData(timeseries);\n    }\n  }, [timeseries, graphData]);\n\n  const yesterdayDate = new Date();\n  yesterdayDate.setDate(yesterdayDate.getDate() - 1);\n  const lastDate = new Date(datapoint['date'] + '2020');\n  const isYesterday =\n    lastDate.getMonth() === yesterdayDate.getMonth() &&\n    lastDate.getDate() === yesterdayDate.getDate();\n\n  return (\n    <div\n      className=\"TimeSeries-Parent fadeInUp\"\n      style={{animationDelay: '2.7s'}}\n    >\n      <div\n        className=\"timeseries\"\n        style={{display: props.type === 1 ? 'flex' : 'none'}}\n      >\n        <div className=\"svg-parent\">\n          <div className=\"stats\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Confirmed</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>\n              {isYesterday\n                ? `${datapoint['date']} Yesterday`\n                : datapoint['date']}\n            </h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['totalconfirmed']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['totalconfirmed'] -\n                      timeseries[index - 1]['totalconfirmed'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['totalconfirmed'] -\n                        timeseries[index - 1]['totalconfirmed'])\n                    : timeseries[index]['totalconfirmed'] -\n                      timeseries[index - 1]['totalconfirmed']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement1}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n\n        <div className=\"svg-parent is-green\">\n          <div className=\"stats is-green\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Recovered</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>\n              {isYesterday\n                ? `${datapoint['date']} Yesterday`\n                : datapoint['date']}\n            </h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['totalrecovered']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['totalrecovered'] -\n                      timeseries[index - 1]['totalrecovered'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['totalrecovered'] -\n                        timeseries[index - 1]['totalrecovered'])\n                    : timeseries[index]['totalrecovered'] -\n                      timeseries[index - 1]['totalrecovered']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement2}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n\n        <div className=\"svg-parent is-gray\">\n          <div className=\"stats is-gray\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Deceased</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>\n              {isYesterday\n                ? `${datapoint['date']} Yesterday`\n                : datapoint['date']}\n            </h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['totaldeceased']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['totaldeceased'] -\n                      timeseries[index - 1]['totaldeceased'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['totaldeceased'] -\n                        timeseries[index - 1]['totaldeceased'])\n                    : timeseries[index]['totaldeceased'] -\n                      timeseries[index - 1]['totaldeceased']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement3}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n      </div>\n\n      <div\n        className=\"timeseries\"\n        style={{display: props.type === 2 ? 'flex' : 'none'}}\n      >\n        <div className=\"svg-parent\">\n          <div className=\"stats\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Confirmed</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>\n              {isYesterday\n                ? `${datapoint['date']} Yesterday`\n                : datapoint['date']}\n            </h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['dailyconfirmed']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['dailyconfirmed'] -\n                      timeseries[index - 1]['dailyconfirmed'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['dailyconfirmed'] -\n                        timeseries[index - 1]['dailyconfirmed'])\n                    : timeseries[index]['dailyconfirmed'] -\n                      timeseries[index - 1]['dailyconfirmed']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement4}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n\n        <div className=\"svg-parent is-green\">\n          <div className=\"stats is-green\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Recovered</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>\n              {isYesterday\n                ? `${datapoint['date']} Yesterday`\n                : datapoint['date']}\n            </h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['dailyrecovered']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['dailyrecovered'] -\n                      timeseries[index - 1]['dailyrecovered'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['dailyrecovered'] -\n                        timeseries[index - 1]['dailyrecovered'])\n                    : timeseries[index]['dailyrecovered'] -\n                      timeseries[index - 1]['dailyrecovered']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement5}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n\n        <div className=\"svg-parent is-gray\">\n          <div className=\"stats is-gray\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Deceased</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>\n              {isYesterday\n                ? `${datapoint['date']} Yesterday`\n                : datapoint['date']}\n            </h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['dailydeceased']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['dailydeceased'] -\n                      timeseries[index - 1]['dailydeceased'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['dailydeceased'] -\n                        timeseries[index - 1]['dailydeceased'])\n                    : timeseries[index]['dailydeceased'] -\n                      timeseries[index - 1]['dailydeceased']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement6}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TimeSeries;\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {formatDistance, format} from 'date-fns';\nimport {\n  formatDate,\n  formatDateAbsolute,\n  validateCTS,\n} from '../../utils/common-functions';\nimport * as Icon from 'react-feather';\nimport {Link} from 'react-router-dom';\n\nimport Table from './../table';\nimport Level from './../level';\nimport MapExplorer from './../mapexplorer';\nimport TimeSeries from './../timeseries';\nimport Minigraph from './../minigraph';\nimport {selectedLanguage} from './../../utils/setLanguage'\nfunction Home(props) {\n  const [states, setStates] = useState([]);\n  const [stateDistrictWiseData, setStateDistrictWiseData] = useState({});\n  /* const [patients, setPatients] = useState([]);*/\n  const [fetched, setFetched] = useState(false);\n  const [graphOption, setGraphOption] = useState(1);\n  const [lastUpdated, setLastUpdated] = useState('');\n  const [timeseries, setTimeseries] = useState([]);\n  const [activityLog, setActivityLog] = useState([]);\n  const [timeseriesMode, setTimeseriesMode] = useState(true);\n  const [timeseriesLogMode, setTimeseriesLogMode] = useState(false);\n  const [regionHighlighted, setRegionHighlighted] = useState(undefined);\n\n  console.log('Time Series',timeseries)\n  useEffect(() => {\n    if (fetched === false) {\n      getStates();\n    }\n  }, [fetched]);\n\n  const getStates = async () => {\n    try {\n      const [\n        response,\n        stateDistrictWiseResponse,\n        updateLogResponse,\n      ] = await Promise.all([\n        axios.get('https://api.covid19india.org/data.json'),\n        axios.get('https://api.covid19india.org/state_district_wise.json'),\n        axios.get('https://api.covid19india.org/updatelog/log.json'),\n      ]);\n      // console.log('Statewise',response.data.statewise)\n      // const onlyMH = response.data.statewise.filter(function(state) {\n      //   return state.statecode == \"MH\";\n      // });\n      setStates(response.data.statewise);\n      setTimeseries(validateCTS(response.data.cases_time_series));\n      setLastUpdated(response.data.statewise[0].lastupdatedtime);\n      setStateDistrictWiseData(stateDistrictWiseResponse.data);\n      setActivityLog(updateLogResponse.data);\n      /* setPatients(rawDataResponse.data.raw_data.filter((p) => p.detectedstate));*/\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n\n  const onHighlightState = (state, index) => {\n    if (!state && !index) setRegionHighlighted(null);\n    else setRegionHighlighted({state, index});\n  };\n  const onHighlightDistrict = (district, state, index) => {\n    if (!state && !index && !district) setRegionHighlighted(null);\n    else setRegionHighlighted({district, state, index});\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"Home\">\n        <div className=\"home-left\">\n          <div className=\"header fadeInUp\" style={{animationDelay: '1s'}}>\n            <div className=\"header-mid\">\n              <div className=\"titles\">\n  <h1>{selectedLanguage.mhTracker}</h1>\n                <h6 style={{fontWeight: 600}}> {selectedLanguage.emInitiative} </h6>\n              </div>\n              {/* <div className=\"last-update\">\n                <h6>Last Updated</h6>\n                <h6 style={{color: '#28a745', fontWeight: 600}}>\n                  {isNaN(Date.parse(formatDate(lastUpdated)))\n                    ? ''\n                    : formatDistance(\n                        new Date(formatDate(lastUpdated)),\n                        new Date()\n                      ) + ' Ago'}\n                </h6>\n                <h6 style={{color: '#28a745', fontWeight: 600}}>\n                  {isNaN(Date.parse(formatDate(lastUpdated)))\n                    ? ''\n                    : formatDateAbsolute(lastUpdated)}\n                </h6>\n              </div> */}\n            </div>\n          </div>\n\n          {/* {states.length > 1 && <Level data={states} />} */}\n          {/* <Minigraph timeseries={timeseries} animate={true} /> */}\n          <Table\n            states={states}\n            summary={false}\n            stateDistrictWiseData={stateDistrictWiseData}\n            onHighlightState={onHighlightState}\n            onHighlightDistrict={onHighlightDistrict}\n          />\n        </div>\n\n        <div className=\"home-right\">\n          {fetched && (\n            <React.Fragment>\n              <MapExplorer\n                states={states}\n                stateDistrictWiseData={stateDistrictWiseData}\n                regionHighlighted={regionHighlighted}\n              />\n\n              <div\n                className=\"timeseries-header fadeInUp\"\n                style={{animationDelay: '2.5s'}}\n              >\n                <h1>INDIA - Spread Trends</h1>\n                <div className=\"tabs\">\n                  <div\n                    className={`tab ${graphOption === 1 ? 'focused' : ''}`}\n                    onClick={() => {\n                      setGraphOption(1);\n                    }}\n                  >\n                    <h4>Cumulative</h4>\n                  </div>\n                  <div\n                    className={`tab ${graphOption === 2 ? 'focused' : ''}`}\n                    onClick={() => {\n                      setGraphOption(2);\n                    }}\n                  >\n                    <h4>Daily</h4>\n                  </div>\n                </div>\n\n                <div className=\"scale-modes\">\n                  <label>Scale Modes</label>\n                  <div className=\"timeseries-mode\">\n                    <label htmlFor=\"timeseries-mode\">Uniform</label>\n                    <input\n                      type=\"checkbox\"\n                      checked={timeseriesMode}\n                      className=\"switch\"\n                      aria-label=\"Checked by default to scale uniformly.\"\n                      onChange={(event) => {\n                        setTimeseriesMode(!timeseriesMode);\n                      }}\n                    />\n                  </div>\n                  <div\n                    className={`timeseries-logmode ${\n                      graphOption !== 1 ? 'disabled' : ''\n                    }`}\n                  >\n                    <label htmlFor=\"timeseries-logmode\">Logarithmic</label>\n                    <input\n                      type=\"checkbox\"\n                      checked={graphOption === 1 && timeseriesLogMode}\n                      className=\"switch\"\n                      disabled={graphOption !== 1}\n                      onChange={(event) => {\n                        setTimeseriesLogMode(!timeseriesLogMode);\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <TimeSeries\n                timeseries={timeseries}\n                type={graphOption}\n                mode={timeseriesMode}\n                logMode={timeseriesLogMode}\n              />\n            </React.Fragment>\n          )}\n        </div>\n\n        {/* <div className=\"home-left\">\n        {patients.length > 1 && (\n          <div className=\"patients-summary\">\n            <h1>Recent Cases</h1>\n            <h6>A summary of the latest reported cases</h6>\n            <div className=\"legend\">\n              <div className=\"legend-left\">\n                <div className=\"circle is-female\"></div>\n                <h5 className=\"is-female\">Female</h5>\n                <div className=\"circle is-male\"></div>\n                <h5 className=\"is-male\">Male</h5>\n                <div className=\"circle\"></div>\n                <h5 className=\"\">Unknown</h5>\n              </div>\n            </div>\n            <div className=\"patients-summary-wrapper\">\n              <Patients\n                patients={patients}\n                summary={true}\n                colorMode={'genders'}\n                expand={true}\n              />\n            </div>\n            <button className=\"button\">\n              <Link to=\"/database\">\n                <Icon.Database />\n                <span>View the Patients Database</span>\n              </Link>\n            </button>\n          </div>\n        )}\n      </div>\n      <div className=\"home-right\"></div>\n    */}\n      </div>\n\n      {/* <div className=\"Home\">\n        <div className=\"home-left\">\n          <div\n            className=\"updates-header fadeInUp\"\n            style={{animationDelay: '1.5s'}}\n          >\n            <h1>Updates</h1>\n            <h2>{format(new Date(), 'd MMM')}</h2>\n          </div>\n\n          <div className=\"updates fadeInUp\" style={{animationDelay: '1.7s'}}>\n            {activityLog\n              .slice(-5)\n              .reverse()\n              .map(function (activity, index) {\n                return (\n                  <div key={index} className=\"update\">\n                    <h5>\n                      {formatDistance(\n                        new Date(activity.timestamp * 1000),\n                        new Date()\n                      ) + ' Ago'}\n                    </h5>\n                    <h4>{activity.update}</h4>\n                  </div>\n                );\n              })}\n            <button className=\"button\">\n              <Link to=\"/demographics\">\n                <Icon.Database />\n                <span>Demographic Overview</span>\n              </Link>\n            </button>\n          </div>\n        </div>\n\n        <div className=\"home-right\"></div>\n      </div> */}\n    </React.Fragment>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Select from 'react-select';\nimport Airtable from 'airtable';\nimport {useQuery} from '../../utils/common-functions';\nimport districtNames from '../../utils/district-lang.json';\nimport { selectedLanguage } from '../../utils/setLanguage';\nconst scrollToRef = (ref) =>\n  window.scrollTo({left: 0, top: ref.current?.offsetTop, behavior: 'smooth'});\n\nexport default function Services() {\n  let tableName;\n\n\n\n \n  const [servicesArray, setServices] = React.useState([]);\n  let deviceLang = window.localStorage.getItem('language');\n  // Parse stored json or if none return initialValue\n  deviceLang = deviceLang ? JSON.parse(deviceLang) : navigator.language;\n  const [filteredServices, setFilteredServices] = React.useState([]);\n  const [singleServiceArray, setSingleServiceArray] = React.useState([]);\n\n  const [servicesToShowFitlered, setServicesToShowFitlered] = React.useState(\n    []\n  );\n\n  const serviceTableRef = React.useRef(null);\n  React.useEffect(() => {\n\n\n    if (deviceLang === 'mr-IN') {\n      tableName = 'Final Data of Services Marathi';\n    } else if (deviceLang === 'hi-IN') {\n      tableName = 'Final Data of Services Hindi';\n    } else {\n      tableName = 'Final Data of Services English';\n    }\n\n    const base = new Airtable({apiKey: 'keyv7fiKaNRuaOKYj'}).base(\n      'appPNBYIlqRPXfwEK'\n    );\n    base(tableName)\n      .select({\n        maxRecords: 5000,\n        view: 'Grid view',\n      })\n      .eachPage(\n        function page(records, fetchNextPage) {\n          records.map((record) =>\n            setServices((servicesArray) => [...servicesArray, record.fields])\n          );\n          fetchNextPage();\n        },\n        function done(err) {\n          if (err) {\n            console.error('Airtable Error :', err);\n            return;\n          }\n        }\n      );\n    // clean up\n    // return () => {\n    // };\n  }, []);\n\n  const districtNamesList = deviceLang === 'hi-IN' || deviceLang === 'mr-IN' \n    ? districtNames[`${deviceLang}`]\n    : districtNames.en;\n\n  console.log(districtNamesList)\n\n  const servicesToShow = [\n    {\n      id: 1,\n      title: 'Free Food',\n      value: 'freeFood',\n      image: 'images/food.svg',\n    },\n    {\n      id: 2,\n      title: 'Shelter Home Details',\n      value: 'shelterHomes',\n      image: 'images/shelter.svg',\n    },\n    {\n      id: 3,\n      title: 'Mental Health Organisations',\n      value: 'mentalHealth',\n      image: 'images/mental.png',\n    },\n    {\n      id: 4,\n      title: 'Medical Equipments',\n      value: 'medical',\n      image: 'images/medical.svg',\n    },\n    {\n      id: 5,\n      title: 'Senior Citizens',\n      value: 'seniorCitizens',\n      image: 'images/senior.svg',\n    },\n    {\n      id: 6,\n      title: 'Domestic Violence & Child Abuse',\n      value: 'domesticViolence',\n      image: 'images/violence.svg',\n    },\n    {\n      id: 7,\n      title: 'Delivery of Essential Services',\n      value: 'delivery',\n      image: 'images/delivery.svg',\n    },\n    {\n      id: 8,\n      title: 'Fund Raising',\n      value: 'fundRaising',\n      image: 'images/donation.svg',\n    },\n  ];\n\n  const [selectedDistrict, setSelectedDistrict] = React.useState('');\n  const [selectedService, setSelectedService] = React.useState('');\n\n  const onSelectDistrict = (district) => {\n    setSelectedDistrict(district);\n    console.log(district);\n    let newfilteredServices = servicesArray.filter((service) => {\n      return service.District === district?.value;\n    });\n    setFilteredServices(newfilteredServices);\n    let filteredServicesToShow = [];\n    for (let i = 0; i < servicesToShow.length; i++) {\n      let showService = false;\n      for (let j = 0; j < newfilteredServices.length; j++) {\n        if (servicesToShow[i].value === newfilteredServices[j].Category) {\n          showService = true;\n          break;\n        }\n      }\n      if (showService) {\n        filteredServicesToShow.push(servicesToShow[i]);\n      }\n    }\n    setServicesToShowFitlered(filteredServicesToShow);\n  };\n\n  const onSelectedService = (item) => {\n    setSelectedService(item.value);\n    let newfilteredServices = filteredServices.filter((service) => {\n      return service.Category === item.value;\n    });\n    setSingleServiceArray(newfilteredServices);\n    scrollToRef(serviceTableRef);\n  };\n\n  return (\n    <div className=\"servicesDiv\">\n      <div style={{width: '240px', marginBottom: '36px'}}>\n        <Select\n          isClearable\n          className=\"districtSelect\"\n          placeholder={selectedLanguage.selectDistrict}\n          options={districtNamesList}\n          onChange={(value) => onSelectDistrict(value)}\n        />\n      </div>\n\n      {selectedDistrict ? (\n        <div className=\"serviceFormDiv\">\n          {servicesToShowFitlered.map((singleService, index) => {\n            return (\n              <div\n                key={index}\n                onClick={() => onSelectedService(singleService)}\n                className=\"singleService\"\n              >\n                <img src={singleService.image} />\n                <h2>{singleService.title}</h2>\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n      <h2>{selectedLanguage.pleaseSelectDistrict}</h2>\n      )}\n\n      {selectedService && selectedDistrict && singleServiceArray ? (\n        <h1 ref={serviceTableRef} className=\"servicesDivH1\">\n          {selectedService} in {selectedDistrict.value}\n        </h1>\n      ) : null}\n\n      <div className=\"serviceDiv\">\n        {selectedDistrict && selectedService && singleServiceArray\n          ? singleServiceArray.map((service) => {\n              return (\n                <div className=\"serviceContainer\">\n                  <h2>{service.Name}</h2>\n                  <h4>{selectedLanguage.region} - {service.Region}</h4>\n                  <h4>{selectedLanguage.contact} - {service.Contact}</h4>\n                  {service.Comments ? (\n                    <h6> {selectedLanguage.additionalInfo} - {service.Comments}</h6>\n                  ) : null}\n                  {service.FundDetails ? (\n                    <>\n                      <h4>Donate - {service.FundDetails}</h4>\n                      <p>\n                        Please contact the organizers and verify your concerns\n                        before donations\n                      </p>\n                    </>\n                  ) : null}\n                </div>\n              );\n            })\n          : null}\n      </div>\n\n      {/* <img src=\"under_construction.svg\" className=\"underConstructionImage\" />\n            <h2 className=\"underConstructionTitle\">Under Construction</h2>\n            <h3 className=\"underConstructionPara\">Help us add the data of various services present in Maharashtra, join the group to contribute or visit <Link to=\"/volunteers\">Volunteers Page</Link></h3> */}\n    </div>\n  );\n}\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Select from 'react-select';\nimport useLocalStorage from './../utils/localStorage'\n\nfunction Navbar(props) {\n  // HTML Properties for each of the links in UI\n  const navLinkProps = (path, animationDelay) => ({\n    className: `fadeInUp ${window.location.pathname === path ? 'focused' : ''}`,\n    style: {\n      animationDelay: `${animationDelay}s`,\n    },\n  });\n\n  const [language, setLanguage] = useLocalStorage('language', 'en');\n\n  const languageChange = [\n    {\"label\": \"English\", \"value\": \"en\"},\n    {\"label\": \"हिन्दी\", \"value\": \"hi-IN\"},\n    {\"label\": \"मराठी\", \"value\": \"mr-IN\"}\n  ]\n\n  async function changeLang (value){\n    await setLanguage(value)\n  }\n\n  if (window.location.pathname !== '/summary') {\n    return (\n      <div\n        className=\"Navbar\"\n        style={{\n          animationDelay: '0.5s',\n          transition: 'all 0.3s ease-in-out',\n        }}\n      >\n        <img\n          className=\"fadeInUp logo\"\n          alt=\"India COVID-19 Tracker\"\n          src=\"/icon.png\"\n          style={{\n            animationDelay: '0.0s',\n            transition: 'all 0.3s ease-in-out',\n          }}\n        />\n\n        <div className=\"navbar-left\">\n          {props.pages.map((page, i) => {\n            return (\n              <Link to={page.pageLink} key={i}>\n                <span\n                  {...navLinkProps(page.pageLink, page.animationDelayForNavbar)}\n                >\n                  {page.displayName}\n                </span>\n              </Link>\n            );\n          })}\n          <Select\n            className=\"languageSelect\"\n            placeholder={'Select Language'}\n            options={languageChange}\n            onChange={\n              (item) => changeLang(item.value).then(window.location.reload())\n              // ()=> setTimeout(()=>{\n              //         window.location.reload()\n              //   }, 3000)\n              }\n          />\n        </div>\n\n        <div className=\"navbar-right\">\n          \n        </div>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n\nexport default Navbar;\n","import React,{useState} from 'react'\n// Hook\nexport default function useLocalStorage(key, initialValue) {\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState(() => {\n      try {\n        // Get from local storage by key\n        const item = window.localStorage.getItem(key);\n        // Parse stored json or if none return initialValue\n        return item ? JSON.parse(item) : initialValue;\n      } catch (error) {\n        // If error also return initialValue\n        console.log(error);\n        return initialValue;\n      }\n    });\n  \n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = value => {\n      try {\n        // Allow value to be a function so we have same API as useState\n        const valueToStore =\n          value instanceof Function ? value(storedValue) : value;\n        // Save state\n        setStoredValue(valueToStore);\n        // Save to local storage\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\n      } catch (error) {\n        // A more advanced implementation would handle the error case\n        console.log(error);\n      }\n    };\n  \n    return [storedValue, setValue];\n  }","import React from 'react';\n\nfunction Links(props) {\n  return (\n <div className=\"Links\">\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.2s'}}>\n        <h3>HELPLINE NUMBER - Maharashtra</h3>\n        <a\n          href=\"tel:020-26127394\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          020-26127394\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.3s'}}>\n        <h3>Self Assesment Tool by Maharashtra Government</h3>\n        <a\n          href=\"https://covid-19.maharashtra.gov.in/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://covid-19.maharashtra.gov.in/\n        </a>\n      </div>\n\n     \n\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.3s'}}>\n        <a\n          href=\"https://play.google.com/store/apps/details?id=com.mahakavach&hl=en_IN\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={{textTransform:'none'}}\n        >\n          Mahakavach App by Maharashtra State Innovation Society\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.3s'}}>\n        <h3>Ministry of Health and Family Welfare, Gov. of India</h3>\n        <a\n          href=\"https://www.mohfw.gov.in/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://www.mohfw.gov.in/\n        </a>\n      </div>\n\n      \n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.4s'}}>\n        <h3>WHO : COVID-19 Home Page</h3>\n        <a\n          href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://www.who.int/emergencies/diseases/novel-coronavirus-2019\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.5s'}}>\n        <h3>CDC</h3>\n        <a\n          href=\"https://www.cdc.gov/coronavirus/2019-ncov/faq.html\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://www.cdc.gov/coronavirus/2019-ncov/faq.html\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.6s'}}>\n        <h3>Crowdsourced list of Resources & Essentials from across India</h3>\n        <a\n          href=\"https://bit.ly/covid19resourcelist\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://bit.ly/covid19resourcelist\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.7s'}}>\n        <h3>COVID-19 Global Tracker</h3>\n        <a\n          href=\"https://coronavirus.thebaselab.com/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://coronavirus.thebaselab.com/\n        </a>\n      </div>\n\n      {/* <div className=\"link fadeInUp\" style={{animationDelay: '0.7s'}}>\n        <p>We are soon adding Maharashtra specific resources, please contact - enrootmumbai@gmail.com</p>\n      </div> */}\n    </div>\n  );\n}\n\nexport default Links;\n","import React, { useEffect} from 'react';\nimport { selectedLanguage } from '../utils/setLanguage';\n\nfunction FAQ(props) {\n  // const [faq, setFaq] = useState([]);\n\n  // useEffect(() => {\n  //   getFAQs();\n  // }, []);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n\n  const faq = [\n    {id:1,question: selectedLanguage.faqq1 ,answer:selectedLanguage.faqa1},\n    {id:2,question:selectedLanguage.faqq2,answer:selectedLanguage.faqa2},\n    {id:3,question:selectedLanguage.faqq3,answer:selectedLanguage.faqa3},\n    {id:4,question:selectedLanguage.faqq4,answer:selectedLanguage.faqa4},\n    {id:5,question:selectedLanguage.faqq5, answer:selectedLanguage.faqa5}\n  ]\n\n\n  // const getFAQs = () => {\n  //   axios\n  //     .get('https://api.covid19india.org/website_data.json')\n  //     .then((response) => {\n  //       setFaq(response.data['faq']);\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n  // };\n\n  return (\n    <div className=\"FAQ\">\n      {faq.map((faq, index) => {\n        return (\n          <div\n            key={index}\n            className=\"faq fadeInUp\"\n            style={{animationDelay: `${0.5 + index * 0.1}s`}}\n          >\n            <h2 className=\"question\">{faq.question}</h2>\n            <h2\n              className=\"answer\"\n              dangerouslySetInnerHTML={{__html: faq.answer}}\n            ></h2>\n          </div>\n        );\n      })}\n      \n    </div>\n  );\n}\n\nexport default FAQ;\n","import React from 'react'\nimport {selectedLanguage} from './../../utils/setLanguage'\nexport default function Services() {\n    return (\n        <div className=\"volunteersContainer\">\n            <h1> {selectedLanguage.helpNeededMsg} </h1>\n            <iframe src=\"https://docs.google.com/forms/d/e/1FAIpQLSfyQYBnEYGnF30_GB6VZ44QV5j26g1K3vqdphu1pWRCYuFy7g/viewform?embedded=true\" width=\"300\" height=\"1508\" frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\">Loading…</iframe>\n            \n        </div>\n    )\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport * as Icon from 'react-feather';\n\nimport './App.scss';\n\nimport Home from './components/Screens/home';\nimport Services from './components/Screens/Services';\n\nimport Navbar from './components/navbar';\nimport Links from './components/links';\nimport FAQ from './components/faq';\nimport Banner from './components/banner';\nimport PatientDB from './components/patientdb';\nimport DeepDive from './components/deepdive';\nimport Volunteers from './components/Screens/Volunteers';\n\nimport {selectedLanguage} from './utils/setLanguage'\n\nconst history = require('history').createBrowserHistory;\n\nconsole.log('Selected Language',selectedLanguage)\nfunction App() {\n  const pages = [\n    {\n      pageLink: '/',\n      view: Home,\n      displayName: selectedLanguage.home,\n      animationDelayForNavbar: 0.2,\n    },\n    // {\n    //   pageLink: '/demographics',\n    //   view: PatientDB,\n    //   displayName: 'Demographics',\n    //   animationDelayForNavbar: 0.3,\n    // },\n    {\n      pageLink: '/services',\n      view: Services,\n      displayName: selectedLanguage.services,\n      animationDelayForNavbar: 0.4,\n    },\n    {\n      pageLink: '/links',\n      view: Links,\n      displayName: selectedLanguage.helpfulLinks,\n      animationDelayForNavbar: 0.4,\n    },\n    {\n      pageLink: '/faq',\n      view: FAQ,\n      displayName: selectedLanguage.about,\n      animationDelayForNavbar: 0.5,\n    },\n    {\n      pageLink: '/volunteers',\n      view: Volunteers,\n      displayName: selectedLanguage.volunteers,\n      animationDelayForNavbar: 0.5,\n    }\n  ];\n\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <Route\n          render={({location}) => (\n            <div className=\"Almighty-Router\">\n              <Navbar pages={pages} />\n              {/* <Banner /> */}\n              <Route exact path=\"/\" render={() => <Redirect to=\"/\" />} />\n              <Switch location={location}>\n                {pages.map((page, i) => {\n                  return (\n                    <Route\n                      exact\n                      path={page.pageLink}\n                      component={page.view}\n                      key={i}\n                    />\n                  );\n                })}\n                <Redirect to=\"/\" />\n              </Switch>\n            </div>\n          )}\n        />\n      </Router>\n\n      <footer className=\"fadeInUp\" style={{animationDelay: '2s'}}>\n        {/* <img\n          src=\"/icon.png\"\n          alt=\"https://www.covid19india.org | Coronavirus cases live dashboard\"\n        /> */}\n\n        <h5>{selectedLanguage.poweredBy}</h5>\n        <a\n          href=\"http://enrootmumbai.in/\"\n          className=\"button enroot\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img\n            src=\"emlogo.png\"\n            alt=\"Enroot Mumbai\"\n            style={{width:'60%',height:'60%'}}\n          />\n          {/* <span>Enroot Mumbai</span> */}\n        </a>\n        <h5>{selectedLanguage.inspiredBy}:</h5>\n        <a\n          href=\"https://www.covid19india.org/\"\n          className=\"button github\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {/* <Icon.GitHub /> */}\n          <span>Covid 19 India</span>\n        </a>\n\n        <h5>{selectedLanguage.join}:</h5>\n        <a\n          href=\"https://chat.whatsapp.com/LUE5qRKSkm7ERVZqrbokV7\"\n          className=\"button github\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <span>{selectedLanguage.whatsappGroup}</span>\n        </a>\n        <a\n          href=\"https://join.slack.com/t/enroot-mumbai/shared_invite/zt-ditoxlox-uL3koEpm3iXFGZhnTFlQGQ\"\n          className=\"button github\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <span>{selectedLanguage.slackChannel}</span>\n        </a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}